export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home"
    },
    {
        "title": "XMLDom",
        "fileName": "XMLDom.html",
        "text": "XMLDom This class implements a small portion of the wc3 xml dom model. Generally useful for simple XML return objects. Note: stores namespaces in the attributes map for now. No node typing done at this time can parse into DOM trees the XML return objects from Google, Amazon and others. large parse trees will consume suprising amounts of memory Signature @SuppressWarnings('PMD.ExcessivePublicCount') public with sharing class XMLDom Digital Align Team @reference https://github.com/skolakan/Apex-XML-Serializer XMLDom Properties Name Signature debug public integer debug root public Element root XMLDom Constructors XMLDom(str) Constructor XMLDom() Constructor XMLDom(str) Constructor Signature public XMLDom(string str) Parameters string str Author Digital Align | 05-20-2021 XMLDom() Constructor Signature @SuppressWarnings('PMD.EmptyStatementBlock') public XMLDom() Author Digital Align | 05-20-2021 XMLDom Methods dumpAll() debugging assistance dumpList(l) getElementByTagName(nam) getElementsByTagName(nam) access nodes in the tree using these getters ownerDocument() utility dom functions parseFromString(str) parseXmlReader(parent, reader) given a parent node and a stream reader, populates the tree below here(recursive) toXmlString() dump out the element tree dumpAll() debugging assistance Signature public void dumpAll() Author Digital Align | 05-20-2021 dumpList(l) Signature public void dumpList(Element[] l) Parameters Element[] l Author Digital Align | 05-20-2021 getElementByTagName(nam) Signature public Element getElementByTagName(string nam) Parameters string nam Returns Element Author Digital Align | 05-20-2021 getElementsByTagName(nam) access nodes in the tree using these getters Signature public List<Element> getElementsByTagName(string nam) Parameters string nam Returns List<Element> Author Digital Align | 05-20-2021 ownerDocument() utility dom functions Signature public Element ownerDocument() Returns Element Author Digital Align | 05-20-2021 parseFromString(str) Signature public void parseFromString(string str) Parameters string str Author Digital Align | 05-20-2021 parseXmlReader(parent, reader) given a parent node and a stream reader, populates the tree below here(recursive) Signature @SuppressWarnings('PMD.CognitiveComplexity') public void parseXmlReader(Element parent, XmlStreamReader reader) Parameters Element parent XmlStreamReader reader Author Digital Align | 05-20-2021 toXmlString() dump out the element tree Signature public String toXmlString() Returns String Author Digital Align | 05-20-2021 XMLDom.Element Signature public class Element XMLDom.Element Properties Name Signature attributes public map<String, String> attributes childNodes public List<Element> childNodes nodeName public string nodeName nodeValue public string nodeValue parentNode public Element parentNode XMLDom.Element Constructors Element(n) Element() Element(n) Signature public Element(string n) Parameters string n Author Digital Align | 05-20-2021 Element() Signature @SuppressWarnings('PMD.EmptyStatementBlock') public Element() Author Digital Align | 05-20-2021 XMLDom.Element Methods appendChild(e) cloneNode() dump() some debugging help dump(pre) dumpAll() dumpAll(pre) firstChild() utility methods getAttribute(name) getElementByTagName(nam) like above, but just returns the first one that matches getElementsByPath(path) experimental path based patern matching, sort of like xpath, but simpler, just matches a path() string with the pattern supplied getElementsByTagName(nam) traverse below this node, returning all matching nodes by name getValue(nam) first one that matches, just return the nodeValue hasAttributes() hasChildNodes() isEqualNode(comp) isSameNode(comp) ownerDocument() path() removeChild(e) textContent() toXmlString() appendChild(e) Signature public void appendChild(Element e) Parameters Element e Author Digital Align | 05-20-2021 cloneNode() Signature public Element cloneNode() dump() some debugging help Signature public void dump() Author Digital Align | 05-20-2021 dump(pre) Signature public void dump(string pre) Parameters string pre Author Digital Align | 05-20-2021 dumpAll() Signature public void dumpAll() Author Digital Align | 05-20-2021 dumpAll(pre) Signature public void dumpAll(string pre) Parameters string pre Author Digital Align | 05-20-2021 firstChild() utility methods Signature public Element firstChild() Returns Element Author Digital Align | 05-20-2021 getAttribute(name) Signature public string getAttribute(string name) Parameters string name Returns string Author Digital Align | 05-20-2021 getElementByTagName(nam) like above, but just returns the first one that matches Signature public Element getElementByTagName(string nam) Parameters string nam Returns Element Author Digital Align | 05-20-2021 getElementsByPath(path) experimental path based patern matching, sort of like xpath, but simpler, just matches a path() string with the pattern supplied Signature public List<Element> getElementsByPath(string path) Parameters string path Returns List<Element> Author Digital Align | 05-20-2021 getElementsByTagName(nam) traverse below this node, returning all matching nodes by name Signature public List<Element> getElementsByTagName(string nam) Parameters string nam Returns List<Element> Author Digital Align | 05-20-2021 getValue(nam) first one that matches, just return the nodeValue Signature public string getValue(string nam) Parameters string nam Returns string Author Digital Align | 05-20-2021 hasAttributes() Signature public boolean hasAttributes() hasChildNodes() Signature public boolean hasChildNodes() isEqualNode(comp) Signature public boolean isEqualNode(Element comp) isSameNode(comp) Signature public boolean isSameNode(Element comp) ownerDocument() Signature public Element ownerDocument() path() Signature public string path() Returns string Author Digital Align | 05-20-2021 removeChild(e) Signature public void removeChild(Element e) Parameters Element e Author Digital Align | 05-20-2021 textContent() Signature public string textContent() toXmlString() Signature public string toXmlString() Returns string Author Digital Align | 05-20-2021"
    },
    {
        "title": "XMLSerializer",
        "fileName": "XMLSerializer.html",
        "text": "XMLSerializer Contains methods for serializing Apex objects into XML format and deserializing XML to Apex object. Signature global with sharing class XMLSerializer Digital Align Team @reference  https://github.com/skolakan/Apex-XML-Serializer XMLSerializer Methods deSerialize(xmlString, apexType) : deSerializes the xml into the object of apextype deSerialize(xmlString, apexType, deSerializeNodesAsArray) : deSerializes the xml into the object of the type passed deSerializeUnTyped(xmlString) : deSerializes the xml string into collection of primitive data types. deSerializeUnTyped(xmlString, deSerializeNodesAsArray) : deSerializes the xml string into collection of primitive data types. jsonToXML(jsonString) : Converts JSON string to XML String. jsonToXML(jsonString, suppressNulls) : Converts JSON string to XML String. resetDefaults() : resets serialize and deserialize options to default serialize(objectToSerialize) : Serializes the object passed to XML string serialize(objectToSerialize, suppressApexObjectNulls, addRootElementName) : Serializes the object to XML string. xmlToJSON(xmlString) : Converts XML string to json string xmlToJSON(xmlString, deSerializeNodesAsArray) : Converts XML string to json string deSerialize(xmlString, apexType) : deSerializes the xml into the object of apextype Signature global object deSerialize(string xmlString, System.Type apexType) Parameters eter      : xmlString = xml String to deSerialize eter      : apexType  = type of object to deSerialize to Returns : object of type apexType deSerialize(xmlString, apexType, deSerializeNodesAsArray) : deSerializes the xml into the object of the type passed Signature global object deSerialize(    string xmlString,    System.Type apexType,    Set<String> deSerializeNodesAsArray  ) Parameters eter      : xmlString = xml String to deSerialize eter      : apexType  = type of object to deSerialize to eter      : deSerializeNodesAsArray  = collection of node names to deserialize as array(Even if xml representation is not an array) Returns : object of type apexType deSerializeUnTyped(xmlString) : deSerializes the xml string into collection of primitive data types. Signature global object deSerializeUnTyped(string xmlString) Parameters eter      : xmlString = xml String to deSerialize Returns : collection of primitive data types deSerializeUnTyped(xmlString, deSerializeNodesAsArray) : deSerializes the xml string into collection of primitive data types. Signature global object deSerializeUnTyped(    string xmlString,    Set<string> deSerializeNodesAsArray  ) Parameters eter      : xmlString = xml String to deSerialize eter      : deSerializeNodesAsArray  = collection of node names to deserialize as array(Even if xml representation is not an array) Returns : collection of primitive data types jsonToXML(jsonString) : Converts JSON string to XML String. Signature global string jsonToXML(string jsonString) Parameters eter      : jsonString = jsonString Returns : XML String jsonToXML(jsonString, suppressNulls) : Converts JSON string to XML String. Signature global string jsonToXML(string jsonString, boolean suppressNulls) Parameters eter      : jsonString = jsonString eter      : suppressNulls = ignores empty Json elements, if true Returns : XML String resetDefaults() : resets serialize and deserialize options to default Signature global void resetDefaults() serialize(objectToSerialize) : Serializes the object passed to XML string Signature global string serialize(object objectToSerialize) Parameters eter      : objectToSerialize = Apex object to serialize into XML Returns : XML String serialize(objectToSerialize, suppressApexObjectNulls, addRootElementName) : Serializes the object to XML string. Signature global string serialize(    object objectToSerialize,    boolean suppressApexObjectNulls,    string addRootElementName  ) Parameters eter      : objectToSerialize = Apex object to serialize into XML eter      : suppressApexObjectNulls = if true, it will not serialize empty elements to XML. eter      : Name of the root element to wrap serialized string with. Returns : XML String xmlToJSON(xmlString) : Converts XML string to json string Signature global string xmlToJSON(string xmlString) Parameters eter      : xmlString = XML String to convert Returns : JSON String xmlToJSON(xmlString, deSerializeNodesAsArray) : Converts XML string to json string Signature global string xmlToJSON(    string xmlString,    Set<string> deSerializeNodesAsArray  ) Parameters eter      : xmlString = XML String to convert eter      : deSerializeNodesAsArray  = collection of node names to deserialize as array(Even if xml representation is not an array) Returns : JSON String"
    },
    {
        "title": "EmailController",
        "fileName": "EmailController.html",
        "text": "EmailController Copyright(c) 2021 Digital Align Email controller utilized in Email Templates to prefill data dynamically Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class EmailController Digital Align Team @reference EmailController Properties Name Signature documentUrl global Map<String, String> documentUrl EmailController Constructors EmailController() EmailController() Signature public EmailController() Author Digital Align Team | 08-18-2021"
    },
    {
        "title": "EmailNotificationBuilder",
        "fileName": "EmailNotificationBuilder.html",
        "text": "EmailNotificationBuilder Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class EmailNotificationBuilder Digital Align Team @reference EmailNotificationBuilder Constructors EmailNotificationBuilder(notificationName) EmailNotificationBuilder(notificationName, linkedEntityId) EmailNotificationBuilder(notificationName) Signature private EmailNotificationBuilder(String notificationName) Parameters String notificationName Author Digital Align Team | 08-04-2021 EmailNotificationBuilder(notificationName, linkedEntityId) Signature private EmailNotificationBuilder(String notificationName, Id linkedEntityId) Parameters String notificationName Id linkedEntityId Author Digital Align Team | 08-04-2021 EmailNotificationBuilder Methods buildNotificationServices() newInstance(notificationName) newInstance(notificationName, linkedEntityId) sendEmail() setBccAddresses(bccAddresses) setBccAddresses(bccAddresses) setCcAddresses(ccAddress) setCcAddresses(ccAddress) setDocumentNames(documentName) setDocumentNames(documentNames) setEntityAttachmentIds(entityAttachmentIds) setFileAttachments(fileAttachments) setLinkedEntityId(linkedEntityId) setNotificationName(notificationName) setSubstitute(substitute) setToAddresses(toAddress) setToAddresses(toAddress) buildNotificationServices() Signature global static List<Messaging.SingleEmailMessage> buildNotificationServices() Author Digital Align Team | 08-03-2021 newInstance(notificationName) Signature global static EmailNotificationBuilder newInstance(String notificationName) Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 newInstance(notificationName, linkedEntityId) Signature global static EmailNotificationBuilder newInstance(    String notificationName,    Id linkedEntityId  ) Parameters String notificationName Id linkedEntityId Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 sendEmail() Signature global static List<Messaging.SendEmailResult> sendEmail() Returns List<Messaging.SendEmailResult> Author Digital Align Team | 08-04-2021 setBccAddresses(bccAddresses) Signature global EmailNotificationBuilder setBccAddresses(String bccAddresses) Parameters String bccAddresses Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 setBccAddresses(bccAddresses) Signature global EmailNotificationBuilder setBccAddresses(List<String> bccAddresses) Parameters List<String> bccAddresses Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 setCcAddresses(ccAddress) Signature global EmailNotificationBuilder setCcAddresses(String ccAddress) Parameters String ccAddress Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 setCcAddresses(ccAddress) Signature global EmailNotificationBuilder setCcAddresses(List<String> ccAddress) Parameters List<String> ccAddress Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 setDocumentNames(documentName) Signature global EmailNotificationBuilder setDocumentNames(String documentName) Parameters String documentName Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setDocumentNames(documentNames) Signature global EmailNotificationBuilder setDocumentNames(List<String> documentNames) Parameters List<String> documentNames Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setEntityAttachmentIds(entityAttachmentIds) Signature global EmailNotificationBuilder setEntityAttachmentIds(    List<Id> entityAttachmentIds  ) Parameters List<Id> entityAttachmentIds Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setFileAttachments(fileAttachments) Signature global EmailNotificationBuilder setFileAttachments(    Map<String, Blob> fileAttachments  ) Parameters Map<String Blob> fileAttachments Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setLinkedEntityId(linkedEntityId) Signature global EmailNotificationBuilder setLinkedEntityId(Id linkedEntityId) Parameters Id linkedEntityId Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setNotificationName(notificationName) Signature global EmailNotificationBuilder setNotificationName(String notificationName) Author Digital Align Team | 08-03-2021 setSubstitute(substitute) Signature global EmailNotificationBuilder setSubstitute(    Map<String, String> substitute  ) Parameters Map<String String> substitute Returns EmailNotificationBuilder Author Digital Align Team | 08-04-2021 setToAddresses(toAddress) Signature global EmailNotificationBuilder setToAddresses(String toAddress) Parameters String toAddress Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021 setToAddresses(toAddress) Signature global EmailNotificationBuilder setToAddresses(List<String> toAddress) Parameters List<String> toAddress Returns EmailNotificationBuilder Author Digital Align Team | 08-03-2021"
    },
    {
        "title": "EmailNotificationRepository",
        "fileName": "EmailNotificationRepository.html",
        "text": "EmailNotificationRepository Copyright(c) 2021 Digital Align Signature public with sharing class EmailNotificationRepository extends DatabaseUtils Digital Align Team @reference EmailNotificationRepository Methods fetchDocumentByDevName(documentNames) fetchEmailTemplateByDevName(emailTemplateNames) fetch email templates by Deveploper Name fetchOrgWideEmailAddress() fetch org wide emaill address fetchDocumentByDevName(documentNames) Signature public static List<Document> fetchDocumentByDevName(    Set<String> documentNames  ) Parameters List<String> documentNames Returns Set<Document> Author Digital Align Team | 08-04-2021 fetchEmailTemplateByDevName(emailTemplateNames) fetch email templates by Deveploper Name Signature public static List<EmailTemplate> fetchEmailTemplateByDevName(    Set<String> emailTemplateNames  ) Parameters List<String> emailTemplateNames Returns List<EmailTemplate> Author Digital Align Team | 08-03-2021 fetchOrgWideEmailAddress() fetch org wide emaill address Signature public static List<OrgWideEmailAddress> fetchOrgWideEmailAddress() Returns List<OrgWideEmailAddress> Author Digital Align Team | 08-03-2021"
    },
    {
        "title": "EmailService",
        "fileName": "EmailService.html",
        "text": "EmailService Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class EmailService extends AbstractService Digital Align Team @reference EmailService Constructors EmailService() EmailService() Signature public EmailService() EmailService Methods generateDocumentUrl(documentNames) getInstance() Provides a singleton instance of EmailService from which all other class methods can be accessed. generateDocumentUrl(documentNames) Signature global virtual Map<String, String> generateDocumentUrl(    Set<String> documentNames  ) Parameters Set<String> documentNames Returns virtual Author Digital Align Team | 08-18-2021 getInstance() Provides a singleton instance of EmailService from which all other class methods can be accessed. Signature public static EmailService getInstance() Returns Object  singleton Author Digital Align Team | 07-12-2021"
    },
    {
        "title": "Query",
        "fileName": "Query.html",
        "text": "Query Copyright(c) Digital Align 2021 @reference https://github.com/4an70m/apex-query-builder @reference https://github.com/jpmonette/q @reference https://github.com/apex-enterprise-patterns/fflib-apex-common Soql/Sosl buidler for salesforce SObjects Signature global inherited sharing class Query Query Constructors Query(sType) Start the query builder Query(sType, parent) Create a query for lookup and child Query() Query() Query() Query(sType) Start the query builder Signature global Query(Schema.SObjectType sType) Parameters Schema.SObjectType sType Author Digital Align | 05-03-2021 Example String q = Query.newInstance(Account.SObjectType).toString(); Query(sType, parent) Create a query for lookup and child Signature private Query(Schema.SObjectType sType, Query parent) Parameters Schema.SObjectType sType Query parent Author Digital Align | 05-03-2021 Query() Signature return new Query(field.getDescribe().getReferenceTo().get(0), this) Query() Signature return new Query(field.getDescribe().getReferenceTo().get(0), this) Query() Signature return new Query(cr.getChildSObject(), this) Query Methods addFields() Add all the field from SObject Type addFields(fieldNames) add all Custom Field by passing list of field names addFields(fieldNames) Pass list of field names as string by comma seperated addFieldSet(fieldSetName) Add field based on the fieldset name from Sobject Type addLimit(limitClause) Soql to add limit addOffset(limitClause) Soql to add offset andCon() Soql for and condition buildChild(childRelationName) soql child objects by passing relation name, which retrieve all record with all fields buildLookup(fieldRelationName) soql lookup object by passing relation name, which retrieve all record with all fields debug() Resolve field name relationship enforceFLS() Enforce security level based on the user context groupBy(groupByFieldName) Add group by fieldname grpClose() Soql for grouping the condition grpOpen() Soql for grouping the condition havingCon(condition) Add having custom free condition newInstance(sType) Initialize variable for query object orCon() Soql for or condition orderBy(fieldName) soql for order by ascending by default ( ORDER BY Name ASC ) orderBy(fieldName, direction) soql for order by descending by passing direction true( ORDER BY Name DESC ) orderBy(fieldName, direction, nullsLast) soql for order by descending by passing direction true( ORDER BY Name DESC NULLS LAST ) orderByDistance(fieldName, distinationLocation, unit) soql orderby distance between a location by default asscending orderByDistance(fieldName, distinationLocation, unit, direction) soql orderby distance between a location, pass direction true for descensing queryById(recordId) Soql short cut by passing id directly queryChild(childRelationName) SOQL with child recording by passing child relationship name queryLookup(fieldName, byFieldName) Create a relationship between Query object queryLookup(fieldRelationName) SQOL lookup object using relation name removeFields(fieldNames) Remove fields by passing list of field names removeFields(fieldNames) Remove fields by passing string of field names removeMergedFields() Remove Person account merged field to avoid insert/update issue for business account run() build a soql for child or parent object toString(showQuery) Generate soql with displaying soql in system.debug toString() Generate final soql whereAnd(fieldName, value) Soql adding where condition along with AND, which resolve field reference and escape single quotes for value(by default true) whereAnd(fieldName, value, escapeSingleQuotes) Soql adding where condition along with AND, which resolve field reference and pass true to escape single quotes for value whereCon(condition) Soql adding custom where condition without escape single quotes for value whereCon(fieldName, value) Soql adding where condition which resolve field reference and escape single quotes for value(by default true) whereCon(fieldName, value, escapeSingleQuotes) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereDistance(fieldName, distinationLocation, unit, value) soql for find distance between a location whereEq(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereGt(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereGte(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereIn(fieldName, value) Soql adding where in condition which resolve field reference whereIn(fieldName, values) whereIn(fieldName, values) whereIn(fieldName, values) whereIn(fieldName, values) whereIncludes(fieldName, values) SOQL for for mulitple picklist comparision by passing list as list of values whereIncludes(fieldName, values) SOQL for for mulitple picklist comparision by passing string as list of value whereLeftLike(fieldName, value) Soql for using left like for wildcards matching(eg %like ) whereLike(fieldName, value) Soql for using like operator for wildcards matching(eg %like% ) whereLt(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereLte(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereNotEq(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereNotIn(fieldName, value) Soql adding where in condition which resolve field reference whereNotIn(fieldName, values) whereNotIn(fieldName, values) whereNotIn(fieldName, values) whereNotIn(fieldName, values) whereNotNull(fieldName) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereNull(fieldName) Soql adding where condition which resolve field reference and pass true to escape single quotes for value whereOr(fieldName, value) Soql adding where condition along with OR, which resolve field reference and escape single quotes for value(by default true) whereOr(fieldName, value, escapeSingleQuotes) Soql adding where condition along with OR, which resolve field reference and pass true to escape single quotes for value whereRightLike(fieldName, value) Soql for using right  like for wildcards matching(eg like% ) addFields() Add all the field from SObject Type Signature global Query addFields() Returns Query Author Digital Align | 05-01-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields() .toString(); addFields(fieldNames) add all Custom Field by passing list of field names Signature global Query addFields(list<String> fieldNames) Parameters list<String> fieldNames Returns Query Author Digital Align | 05-02-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields(new list<String>{'Name','LastName'}) .toString(true); addFields(fieldNames) Pass list of field names as string by comma seperated Signature global Query addFields(String fieldNames) Parameters String fieldNames Returns Query Author Digital Align | 05-03-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name,LastName') .toString(true); addFieldSet(fieldSetName) Add field based on the fieldset name from Sobject Type Signature global Query addFieldSet(String fieldSetName) Parameters String fieldSetName Returns Query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Account.SObjectType) .addFieldset('CustomField') .toString(true); addLimit(limitClause) Soql to add limit Signature global Query addLimit(Integer limitClause) Parameters Integer limitClause Returns Query Author Digital Align | 05-02-2021 Example String q = Query.newInstance(Account.SObjectType) .addLimit(5) .toString(); addOffset(limitClause) Soql to add offset Signature global Query addOffset(Integer limitClause) Parameters Integer limitClause Returns Query Author Digital Align | 05-02-2021 Example String q = Query.newInstance(Account.SObjectType) .addOffset(5) .toString(); andCon() Soql for and condition Signature global Query andCon() Returns Query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .whereCon('LastName','=\\'Rogers\\'',true) .andCon() .whereCon('FirstName','=\\'Rogers\\'',true) .toString(true); buildChild(childRelationName) soql child objects by passing relation name, which retrieve all record with all fields Signature global Query buildChild(String childRelationName) Parameters String childRelationName Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields() .buildChild('Contacts') .toString(true); buildLookup(fieldRelationName) soql lookup object by passing relation name, which retrieve all record with all fields Signature global Query buildLookup(String fieldRelationName) Parameters String fieldRelationName Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields(new List<String>{'Name','LastName','FirstName'}) .buildLookUp('Account') .toString(true); debug() Resolve field name relationship Signature global Query debug() Parameters String relationName Returns String Author Digital Align | 05-02-2021 enforceFLS() Enforce security level based on the user context Signature global Query enforceFLS() Returns Query Author Digital Align | 05-03-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields() .enforceFLS() .toString(); groupBy(groupByFieldName) Add group by fieldname Signature global Query groupBy(String groupByFieldName) Parameters String groupByFieldName Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Opportunity.SObjectType) .addFields('CampaignId, AVG(Amount)') .groupBy('CampaignId') .toString(true); grpClose() Soql for grouping the condition Signature global Query grpClose() Returns Query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .grpOpen() .whereCon('LastName','=\\'Rogers\\'',true) .orCon() .whereCon('FirstName','=\\'Jack\\'',true) .grpClose() .andCon() .whereCon('Name','=\\'Jack Rogers\\'',true) .toString(true); grpOpen() Soql for grouping the condition Signature global Query grpOpen() Returns Query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .grpOpen() .whereCon('LastName','=\\'Rogers\\'',true) .orCon() .whereCon('FirstName','=\\'Jack\\'',true) .grpClose() .andCon() .whereCon('Name','=\\'Jack Rogers\\'',true) .toString(true); havingCon(condition) Add having custom free condition Signature global Query havingCon(String condition) Parameters String condition Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Opportunity.SObjectType) .addFields('CampaignId, AVG(Amount)') .groupBy('CampaignId') .havingCon(' AVG(Amount) > 100 And  AVG(Amount) <20000000') .toString(true); newInstance(sType) Initialize variable for query object Signature global static Query newInstance(Schema.SObjectType sType) Returns Query Author Digital Align | 05-03-2021 orCon() Soql for or condition Signature global Query orCon() Returns Query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .whereCon('LastName','=\\'Rogers\\'',true) .orCon() .whereCon('FirstName','=\\'Rogers\\'',true) .toString(true); orderBy(fieldName) soql for order by ascending by default ( ORDER BY Name ASC ) Signature global Query orderBy(String fieldName) Parameters String fieldName Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .orderBy('Name') .toString(true); orderBy(fieldName, direction) soql for order by descending by passing direction true( ORDER BY Name DESC ) Signature global Query orderBy(String fieldName, Boolean direction) Parameters String fieldName Boolean direction Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .orderBy('Name',true) .toString(true); orderBy(fieldName, direction, nullsLast) soql for order by descending by passing direction true( ORDER BY Name DESC NULLS LAST ) Signature global Query orderBy(String fieldName, Boolean direction, Boolean nullsLast) Parameters String fieldName Boolean direction Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .orderBy('Name',true,true) .toString(true); orderByDistance(fieldName, distinationLocation, unit) soql orderby distance between a location by default asscending Signature global Query orderByDistance(    String fieldName,    System.Location distinationLocation,    String unit  ) Parameters String fieldName System.Location distinationLocation String unit Returns QueryBuilder Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .orderByDistance('MailingAddress',Location.newInstance(28.635308,77.22496),  'mi') .toString(true); orderByDistance(fieldName, distinationLocation, unit, direction) soql orderby distance between a location, pass direction true for descensing Signature global Query orderByDistance(    String fieldName,    System.Location distinationLocation,    String unit,    Boolean direction  ) Parameters String fieldName System.Location distinationLocation String unit Boolean direction Returns Query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .orderByDistance('MailingAddress',Location.newInstance(28.635308,77.22496),  'mi',true) .toString(true); queryById(recordId) Soql short cut by passing id directly Signature global String queryById(Object recordId) Parameters Object recordId Returns String Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .queryById('0031y00000CZ0sBAAT'); queryChild(childRelationName) SOQL with child recording by passing child relationship name Signature global Query queryChild(String childRelationName) Parameters String childRelationName Returns Query Author Digital Align | 05-03-2021 Example String q = Query.newInstance(Account.SObjectType) .queryChild('Contacts') .run() .toString(true); queryLookup(fieldName, byFieldName) Create a relationship between Query object Signature global Query queryLookup(String fieldName, Boolean byFieldName) Parameters Relationship relationType String relationName Author Digital Align | 05-03-2021 queryLookup(fieldRelationName) SQOL lookup object using relation name Signature global Query queryLookup(String fieldRelationName) Parameters String fieldRelationName Returns Query Author Digital Align | 05-02-2021 Example String q = Query.newInstance(Contact.SObjectType) .queryLookup('Account') .run() .toString(true); removeFields(fieldNames) Remove fields by passing list of field names Signature global Query removeFields(list<String> fieldNames) Parameters list<String> fieldNames Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields(new List<String>{'Name','LastName','FirstName'}) .removeFields(new List<String>{'LastName','FirstName'}) .toString(true); removeFields(fieldNames) Remove fields by passing string of field names Signature global Query removeFields(String fieldNames) Parameters String fieldNames Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name,LastName,FirstName') .removeFields('LastName,FirstName') .toString(true); removeMergedFields() Remove Person account merged field to avoid insert/update issue for business account Signature global Query removeMergedFields() Returns Query Author Digital Align Team | 07-15-2021 run() build a soql for child or parent object Signature global Query run() Returns Query Author Digital Align | 05-01-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .queryLookup('Account') .addFields() .run() .toString(true); toString(showQuery) Generate soql with displaying soql in system.debug Signature global String toString(Boolean showQuery) Parameters Boolean showQuery Returns String Author Digital Align | 05-02-2021 Example String q = Query.newInstance(Account.SObjectType) .toString(true); toString() Generate final soql Signature global override String toString() Returns String Author Digital Align | 05-01-2021 Example String q = Query.newInstance(Account.SObjectType) .toString(); whereAnd(fieldName, value) Soql adding where condition along with AND, which resolve field reference and escape single quotes for value(by default true) Signature global Query whereAnd(String fieldName, String value) Parameters String fieldName String value Returns Query Author Digital Align | 05-04-2021 Example List<Object> parameters = new List<Object> {'Rogers','Jack'}; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereAnd('LastName','={0}') .whereCon('FirstName','={1}') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q,parameters); whereAnd(fieldName, value, escapeSingleQuotes) Soql adding where condition along with AND, which resolve field reference and pass true to escape single quotes for value Signature global Query whereAnd(    String fieldName,    String value,    Boolean escapeSingleQuotes  ) Parameters String fieldName String value Boolean escapeSingleQuotes Returns Query Author Digital Align | 05-06-2021 Example List<Object> parameters = new List<Object> {'Jack'}; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereAnd('LastName','=\\'Rogers\\'',false) .whereCon('FirstName','={0}') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q,parameters); whereCon(condition) Soql adding custom where condition without escape single quotes for value Signature global query whereCon(String condition) Parameters String condition Returns query Author Digital Align | 05-04-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereCon('LastName=\\'Rogers\\'') .toString(true); whereCon(fieldName, value) Soql adding where condition which resolve field reference and escape single quotes for value(by default true) Signature global Query whereCon(String fieldName, String value) Parameters String fieldName String value Returns Query Author Digital Align | 05-04-2021 Example List<Object> parameters = new List<Object> {'Rogers'}; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereCon('LastName','={0}') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q,parameters); whereCon(fieldName, value, escapeSingleQuotes) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereCon(    String fieldName,    String value,    Boolean escapeSingleQuotes  ) Parameters String fieldName String value Boolean escapeSingleQuotes Returns Query Author Digital Align | 05-06-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereCon('LastName','=\\'Rogers\\'',false) .toString(true); whereDistance(fieldName, distinationLocation, unit, value) soql for find distance between a location Signature global Query whereDistance(    String fieldName,    System.Location distinationLocation,    String unit,    String value  ) Parameters String fieldName System.Location distinationLocation String unit String value Returns Query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields() .whereDistance('MailingAddress', Location.newInstance(28.635308,77.22496)  , 'mi','<500') .toString(true); whereEq(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereEq(String fieldName, Object value) Parameters String fieldName Object value Returns Query String FirstName='Tim'; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereEq('LastName','Barr') .AndCon() .whereEq('FirstName',FirstName) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); Author Digital Align Team | 07-13-2021 whereGt(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereGt(String fieldName, Object value) Parameters String fieldName Object value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereGt('CreatedDate', DateTime.now()) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereGte(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereGte(String fieldName, Object value) Parameters String fieldName Object value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereGte('CreatedDate', DateTime.now()) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereIn(fieldName, value) Soql adding where in condition which resolve field reference Signature global Query whereIn(String fieldName, String value) Parameters String fieldName String value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields('Name') .whereIn('Id', Query.newInstance(Contact.SObjectType) .addFields('AccountId') .whereEq('FirstName','Tim') .toString() ) .toString(true); List<Account> sl =(List<Account> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereIn(fieldName, values) Signature global Query whereIn(String fieldName, List<SObject> values) Parameters String fieldName List<SObject> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereIn('Id', sl) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereIn(fieldName, values) Signature global Query whereIn(String fieldName, Set<Id> values) Parameters String fieldName Set<Id> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereIn('Id', new Map<id,sObject>(sl).keyset()) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereIn(fieldName, values) Signature global Query whereIn(String fieldName, set<Object> values) Parameters String fieldName set<Object> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereIn('Id', new Map<id,sObject>(sl).keyset()) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereIn(fieldName, values) Signature global Query whereIn(String fieldName, List<Object> values) Parameters String fieldName List<Object> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereIn('Id', new List<id>(new Map<id,sObject>(sl).keyset())) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereIncludes(fieldName, values) SOQL for for mulitple picklist comparision by passing list as list of values Signature global Query whereIncludes(String fieldName, List<String> values) Parameters String fieldName List<String> values Returns Query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Opportunity.SObjectType) .addFields('Name') .whereIncludes('CustomMultiSelect__c',new list<String> {'one;two','three'}) .toString(true); whereIncludes(fieldName, values) SOQL for for mulitple picklist comparision by passing string as list of value Signature global Query whereIncludes(String fieldName, String values) Parameters String fieldName String values Returns Query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Opportunity.SObjectType) .addFields('Name') .whereIncludes('CustomMultiSelect__c','one;two,three') .toString(true); whereLeftLike(fieldName, value) Soql for using left like for wildcards matching(eg %like ) Signature global query whereLeftLike(String fieldName, String value) Parameters String fieldName String value Returns query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields('Name') .whereLeftLike('Name','Burlington') .toString(true); whereLike(fieldName, value) Soql for using like operator for wildcards matching(eg %like% ) Signature global query whereLike(String fieldName, String value) Parameters String fieldName String value Returns query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields('Name') .whereLike('Name','Burlington') .toString(true); whereLt(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereLt(String fieldName, Object value) Parameters String fieldName Object value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereLt('CreatedDate', DateTime.now()) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereLte(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereLte(String fieldName, Object value) Parameters String fieldName Object value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereLte('CreatedDate', DateTime.now()) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereNotEq(fieldName, value) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereNotEq(String fieldName, Object value) Parameters String fieldName Object value Returns Query String FirstName='Tim'; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotEq('LastName','Barr') .AndCon() .whereNotEq('FirstName',FirstName) .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); Author Digital Align Team | 07-13-2021 whereNotIn(fieldName, value) Soql adding where in condition which resolve field reference Signature global Query whereNotIn(String fieldName, String value) Parameters String fieldName String value Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields('Name') .whereNotIn('Id', Query.newInstance(Contact.SObjectType) .addFields('AccountId') .whereEq('FirstName','Tim') .toString() ) .toString(true); List<Account> sl =(List<Account> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereNotIn(fieldName, values) Signature global Query whereNotIn(String fieldName, List<SObject> values) Parameters String fieldName List<SObject> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotIn('Id', sl) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereNotIn(fieldName, values) Signature global Query whereNotIn(String fieldName, Set<Id> values) Parameters String fieldName Set<Id> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotIn('Id', new Map<id,sObject>(sl).keyset()) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereNotIn(fieldName, values) Signature global Query whereNotIn(String fieldName, set<Object> values) Parameters String fieldName set<Object> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotIn('Id', new Map<id,sObject>(sl).keyset()) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereNotIn(fieldName, values) Signature global Query whereNotIn(String fieldName, List<Object> values) Parameters String fieldName List<Object> values Returns Query Author Digital Align Team | 07-13-2021 Example List<Contact> sl =(List<Contact> )DatabaseUtils.getRecords(Query.newInstance(Contact.SObjectType).addLimit(2).toString()); String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotIn('Id', new List<id>(new Map<id,sObject>(sl).keyset())) .toString(true); sl =(List<Contact> ) DatabaseUtils.getRecords(q); system.debug(system.JSON.Serialize(sl)); whereNotNull(fieldName) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereNotNull(String fieldName) Parameters String fieldName Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNotNull('FirstName') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereNull(fieldName) Soql adding where condition which resolve field reference and pass true to escape single quotes for value Signature global Query whereNull(String fieldName) Parameters String fieldName Returns Query Author Digital Align Team | 07-13-2021 Example String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereNull('FirstName') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q); whereOr(fieldName, value) Soql adding where condition along with OR, which resolve field reference and escape single quotes for value(by default true) Signature global Query whereOr(String fieldName, String value) Parameters String fieldName String value Returns Query Author Digital Align | 05-04-2021 Example List<Object> parameters = new List<Object> {'Rogers','Jack'}; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereOr('LastName','={0}') .whereCon('FirstName','={1}') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q,parameters); whereOr(fieldName, value, escapeSingleQuotes) Soql adding where condition along with OR, which resolve field reference and pass true to escape single quotes for value Signature global Query whereOr(    String fieldName,    String value,    Boolean escapeSingleQuotes  ) Parameters String fieldName String value Boolean escapeSingleQuotes Returns Query Author Digital Align | 05-06-2021 Example List<Object> parameters = new List<Object> {'Jack'}; String q = Query.newInstance(Contact.SObjectType) .addFields('Name') .whereOr('LastName','=\\'Rogers\\'',false) .whereCon('FirstName','={0}') .toString(true); List<Contact> sl =(List<Contact> ) DatabaseUtils.getRecords(q,parameters); whereRightLike(fieldName, value) Soql for using right  like for wildcards matching(eg like% ) Signature global query whereRightLike(String fieldName, String value) Parameters String fieldName String value Returns query Author Digital Align | 05-07-2021 Example String q = Query.newInstance(Account.SObjectType) .addFields('Name') .whereRightLike('Name','Burlington') .toString(true);"
    },
    {
        "title": "QueryConstants",
        "fileName": "QueryConstants.html",
        "text": "QueryConstants Copyright(c) 2021 Digital Align constant file for query builder Signature public inherited sharing class QueryConstants Digital Align Team @reference QueryConstants Properties Name Signature CONDITION_AND public static final String CONDITION_AND CONDITION_IN public static final String CONDITION_IN CONDITION_INCLUDES public static final String CONDITION_INCLUDES CONDITION_LIKE public static final String CONDITION_LIKE CONDITION_NOT_IN public static final String CONDITION_NOT_IN CONDITION_OR public static final String CONDITION_OR ENFORCE_SECURITY public static final String ENFORCE_SECURITY ID_FIELD public static final String ID_FIELD QUERY_FROM public static final String QUERY_FROM QUERY_GROUP_BY public static final String QUERY_GROUP_BY QUERY_HAVING public static final String QUERY_HAVING QUERY_LIMIT public static final String QUERY_LIMIT QUERY_OFFSET public static final String QUERY_OFFSET QUERY_ORDER_BY public static final String QUERY_ORDER_BY QUERY_SELECT public static final String QUERY_SELECT QUERY_WHERE public static final String QUERY_WHERE SYB_CLOSE_BRACKET public static final String SYB_CLOSE_BRACKET SYB_COMMA public static final String SYB_COMMA SYB_EQ public static final String SYB_EQ SYB_GT public static final String SYB_GT SYB_GTE public static final String SYB_GTE SYB_LT public static final String SYB_LT SYB_LTE public static final String SYB_LTE SYB_NEQ public static final String SYB_NEQ SYB_OPEN_BRACKET public static final String SYB_OPEN_BRACKET SYB_SPACE public static final String SYB_SPACE"
    },
    {
        "title": "AbstractTriggerHandler",
        "fileName": "AbstractTriggerHandler.html",
        "text": "AbstractTriggerHandler Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global abstract with sharing class AbstractTriggerHandler Digital Align Team @reference AbstractTriggerHandler Properties Name Signature sharedMap global static Map<String, Object> sharedMap AbstractTriggerHandler Methods afterDelete() Virtual method for the implementing class to override afterInsert() Virtual method for the implementing class to override after insert trigger has Trigger.New,Trigger.Old afterUndelete() Virtual method for the implementing class to override afterUpdate() Virtual method for the implementing class to override after updtae trigger has Trigger.New,Trigger.Old,Trigger.newMap and Trigger.oldMap beforeDelete() Virtual method for the implementing class to override beforeInsert() These methods are all intended to be overridden by individual trigger handlers. They exist here only to establish the 'software contract' that they exist. beforeUpdate() Virtual method for the implementing class to override Before updtae trigger has Trigger.New,Trigger.Old,Trigger.newMap and Trigger.oldMap bypass(handlerName) By bass Trigger methods clearAllBypasses() removes all classes from the bypass list clearBypass(handlerName) Removes a given trigger handler class name from the list of bypassed trigger handlers. filterUnchangedRecords(newRecords, oldRecords) isBypassed(handlerName) Allows developers to check whether a given trigger handler class is currently bypassed. afterDelete() Virtual method for the implementing class to override Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void afterDelete() afterInsert() Virtual method for the implementing class to override after insert trigger has Trigger.New,Trigger.Old Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void afterInsert() afterUndelete() Virtual method for the implementing class to override Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void afterUndelete() afterUpdate() Virtual method for the implementing class to override after updtae trigger has Trigger.New,Trigger.Old,Trigger.newMap and Trigger.oldMap Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void afterUpdate() beforeDelete() Virtual method for the implementing class to override Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void beforeDelete() beforeInsert() These methods are all intended to be overridden by individual trigger handlers. They exist here only to establish the 'software contract' that they exist. Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void beforeInsert() beforeUpdate() Virtual method for the implementing class to override Before updtae trigger has Trigger.New,Trigger.Old,Trigger.newMap and Trigger.oldMap Signature @SuppressWarnings('PMD.EmptyStatementBlock') global virtual void beforeUpdate() bypass(handlerName) By bass Trigger methods Signature global void bypass(String handlerName) clearAllBypasses() removes all classes from the bypass list Signature global void clearAllBypasses() Example this.clearAllBypasses(); clearBypass(handlerName) Removes a given trigger handler class name from the list of bypassed trigger handlers. Signature global void clearBypass(String handlerName) Parameters handlerName Type: String Handler class name to remove from the bypass list Example this.clearBypass('AccountTriggerHandler'); filterUnchangedRecords(newRecords, oldRecords) Signature global Set<Id> filterUnchangedRecords(    Map<Id, SObject> newRecords,    Map<Id, SObject> oldRecords  ) Parameters Map<Id SObject> newRecords Map<Id SObject> oldRecords Returns Set<Id> Author Digital Align | 06-05-2021 isBypassed(handlerName) Allows developers to check whether a given trigger handler class is currently bypassed. Signature global Boolean isBypassed(String handlerName) Parameters handlerName Type: String The name of the trigger handler class to check for Returns Boolean Example this.isBypassed('AccountTriggerHandler');"
    },
    {
        "title": "TriggerDispatcher",
        "fileName": "TriggerDispatcher.html",
        "text": "TriggerDispatcher Copyright(c) 2021 Digital Align An trigger handler framework Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class TriggerDispatcher Digital Align Team @reference TriggerDispatcher Methods bypass(handlerName) make sure this trigger should continue to run clearAllBypasses() removes all classes from the bypass list clearBypass(handlerName) Removes a given trigger handler class name from the list of bypassed trigger handlers. decrement() Decrement the internal counter exceeded() Determines if this we're about to exceed the loop count. getCount() increment() Increment the internal counter returning the results of this.exceeded(). isBypassed(handlerName) Allows developers to check whether a given trigger handler class is currently bypassed. LoopCount(max) inner class for managing the loop count per handler run(sType) This is main brokering method that is called by the trigger. It's responsible for determining the proper context, and calling the correct method setMax(max) Sets the max loop size setMaxLoopCount(handlerName, max) Internal method for manually handler method on trigger context bypass(handlerName) make sure this trigger should continue to run Signature public static void bypass(String handlerName) Parameters String handlerName Returns Boolean Author Digital Align | 06-05-2021 clearAllBypasses() removes all classes from the bypass list Signature public static void clearAllBypasses() Example TriggerDispatcher.clearAllBypasses(); clearBypass(handlerName) Removes a given trigger handler class name from the list of bypassed trigger handlers. Signature public static void clearBypass(String handlerName) Parameters handlerName Type: String Handler class name to remove from the bypass list Example TriggerDispatcher.clearBypass('AccountTriggerHandler'); decrement() Decrement the internal counter Signature public void decrement() exceeded() Determines if this we're about to exceed the loop count. Signature public Boolean exceeded() Returns Boolean  true if less than 0 or more than max. getCount() Signature public Integer getCount() increment() Increment the internal counter returning the results of this.exceeded(). Signature public Boolean increment() Returns Boolean  true if count will exceed max count or is less than 0. isBypassed(handlerName) Allows developers to check whether a given trigger handler class is currently bypassed. Signature public static Boolean isBypassed(String handlerName) Parameters handlerName Type: String The name of the trigger handler class to check for Returns Boolean Example TriggerDispatcher.isBypassed('AccountTriggerHandler'); LoopCount(max) inner class for managing the loop count per handler Signature public LoopCount(Integer max) run(sType) This is main brokering method that is called by the trigger. It's responsible for determining the proper context, and calling the correct method Signature global static void run(Schema.SObjectType sType) Parameters Schema.SObjectType sType Author Digital Align | 06-05-2021 setMax(max) Sets the max loop size Signature public void setMax(Integer max) Parameters max Type: Integer The integer to set max to. setMaxLoopCount(handlerName, max) Internal method for manually handler method on trigger context Signature public static void setMaxLoopCount(String handlerName, Integer max) Parameters AbstractTriggerHandler triggerAction Author Digital Align | 06-05-2021"
    },
    {
        "title": "TriggerRepository",
        "fileName": "TriggerRepository.html",
        "text": "TriggerRepository Copyright(c) 2021 Digital Align Signature public with sharing class TriggerRepository extends DatabaseUtils Digital Align Team @reference TriggerRepository Methods fetchTriggerSettingBySObject(sObjectName, namespace) fetchTriggerSettingBySObject(sObjectName, namespace) Signature public static list<SObjectTriggerSetting__mdt> fetchTriggerSettingBySObject(    String sObjectName,    String namespace  ) Parameters Stirng sObjectName String namespace Returns list<SObjectTriggerSetting__mdt> Author Digital Align | 06-05-2021"
    },
    {
        "title": "ApexUtils",
        "fileName": "ApexUtils.html",
        "text": "ApexUtils Copyright(c) 2021 Digital Align Signature @isTest public inherited sharing class ApexUtils Digital Align Team @reference ApexUtils Methods InjectChildrenEventHandler(childrenParser, relationshipName, children) Helper Methods makeRelationship(parentsType, parents, relationshipField, children) This is taken from https://gist.github.com/afawcett/8dbfc0e1d8c43c982881. This method works on the principle that serializing and deserialising child records is supported System.assertEquals(1,((List<Master__c>) JSON.deserialize( JSON.serialize( [select Id, Name,(select Id, Name from Children__r) from Master__c]), List<Master__c>.class)) [0].Children__r.size()); This method results internally in constructing this JSON, before deserialising it back into SObject's [ { \"attributes\": { \"type\": \"Master__c\", \"url\": \"/services/data/v32.0/sobjects/Master__c/a0YG0000005Jn5uMAC\" }, \"Name\": \"Fred\", \"Id\": \"a0YG0000005Jn5uMAC\", \"Children__r\": { \"totalSize\": 1, \"done\": true, \"records\": [ { \"attributes\": { \"type\": \"Child__c\", \"url\": \"/services/data/v32.0/sobjects/Child__c/a0ZG0000006JGPAMA4\" }, \"Name\": \"Bob\", \"Id\": \"a0ZG0000006JGPAMA4\", \"Master__c\": \"a0YG0000005Jn5uMAC\" } ] } ] makeRelationship(parentTypeName, childTypeName, parents, relationshipFieldName, children) Generic overload to makeRelationship. Enables creation of relationships in a loosely-coupled manner. nextToken(fromStream, depth, toStream) setReadOnlyFields(objInstance, deserializeType, properties) Gives the ability to set test values on formula and other read-only fields of mock SObjects InjectChildrenEventHandler(childrenParser, relationshipName, children) Helper Methods Signature public InjectChildrenEventHandler(      JSONParser childrenParser,      String relationshipName,      List<List<SObject>> children    ) makeRelationship(parentsType, parents, relationshipField, children) This is taken from https://gist.github.com/afawcett/8dbfc0e1d8c43c982881. This method works on the principle that serializing and deserialising child records is supported System.assertEquals(1,((List<Master__c>) JSON.deserialize( JSON.serialize( [select Id, Name,(select Id, Name from Children__r) from Master__c]), List<Master__c>.class)) [0].Children__r.size()); This method results internally in constructing this JSON, before deserialising it back into SObject's [ { \"attributes\": { \"type\": \"Master__c\", \"url\": \"/services/data/v32.0/sobjects/Master__c/a0YG0000005Jn5uMAC\" }, \"Name\": \"Fred\", \"Id\": \"a0YG0000005Jn5uMAC\", \"Children__r\": { \"totalSize\": 1, \"done\": true, \"records\": [ { \"attributes\": { \"type\": \"Child__c\", \"url\": \"/services/data/v32.0/sobjects/Child__c/a0ZG0000006JGPAMA4\" }, \"Name\": \"Bob\", \"Id\": \"a0ZG0000006JGPAMA4\", \"Master__c\": \"a0YG0000005Jn5uMAC\" } ] } ] Signature public static Object makeRelationship(    Type parentsType,    List<SObject> parents,    SObjectField relationshipField,    List<List<SObject>> children  ) makeRelationship(parentTypeName, childTypeName, parents, relationshipFieldName, children) Generic overload to makeRelationship. Enables creation of relationships in a loosely-coupled manner. Signature public static Object makeRelationship(    String parentTypeName,    String childTypeName,    List<SObject> parents,    String relationshipFieldName,    List<List<SObject>> children  ) nextToken(fromStream, depth, toStream) Signature public void nextToken(      JSONParser fromStream,      Integer depth,      JSONGenerator toStream    ) setReadOnlyFields(objInstance, deserializeType, properties) Gives the ability to set test values on formula and other read-only fields of mock SObjects Signature public static Object setReadOnlyFields(    SObject objInstance,    Type deserializeType,    Map<SObjectField, Object> properties  )"
    },
    {
        "title": "CollectionUtils",
        "fileName": "CollectionUtils.html",
        "text": "CollectionUtils Copyright(c) 2021 Digital Align This class implement utils function for some basic function for handling collection Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global inherited sharing class CollectionUtils Digital Align Team @reference CollectionUtils Methods convertSobjectToListSobject(record) Convert record to List<Sobject> by holding sobject context instanceOfListBySobjectType(sObjectType) Return list<SObject> of SObjectType to maintain the context isListEmpty(records) Verify list is empty joinListByComma(values) String conversion method convertSobjectToListSobject(record) Convert record to List<Sobject> by holding sobject context Signature global static List<SObject> convertSobjectToListSobject(SObject record) Parameters SObject record Returns List<SObject> Author Digital Align | 05-15-2021 instanceOfListBySobjectType(sObjectType) Return list<SObject> of SObjectType to maintain the context Signature global static List<SObject> instanceOfListBySobjectType(    Schema.SObjectType sObjectType  ) Parameters Schema.SObjectType sObjectType Returns List<SObject> Author Digital Align | 05-15-2021 isListEmpty(records) Verify list is empty Signature global static Boolean isListEmpty(list<Object> records) Parameters list<Object> records Returns Boolean Author Digital Align | 05-12-2021 joinListByComma(values) String conversion method Signature global static String joinListByComma(List<String> values) Parameters List<String> values Author Digital Align | 05-07-2021"
    },
    {
        "title": "CrudType",
        "fileName": "CrudType.html",
        "text": "CrudType Copyright(c) 2021 Digital Align Signature global enum CrudType Values CREATABLE READABLE UPDATABLE UPSERTABLE DELETEABLE Digital Align Team @reference"
    },
    {
        "title": "DatabaseUtils",
        "fileName": "DatabaseUtils.html",
        "text": "DatabaseUtils Copyright(c) 2021 Digital Align Secure code that prevents users from seeing and accessing fields they cannot access. Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual inherited sharing class DatabaseUtils Digital Align Team @reference  https://github.com/trailheadapps/apex-recipes DatabaseUtils Methods deleteRecord(record) deleteRecordBySharing(record) deleteRecords(records) deleteRecordsBySharing(records) getRecord(queryString) getRecord(queryString, records) getRecordBySharing(queryString) getRecordBySharing(queryString, records) getRecordByStrip(queryString) getRecordByStrip(queryString, records) getRecords(queryString) getRecords(queryString, records) getRecordsBySharing(queryString) getRecordsBySharing(queryString, records) getRecordsByStrip(queryString) getRecordsByStrip(queryString, records) insertRecord(record) insertRecordBySharing(record) insertRecordByStrip(record) insertRecords(records) insertRecordsBySharing(records) insertRecordsByStrip(records) updateRecord(record) updateRecordBySharing(record) updateRecordByStrip(record) updateRecords(records) updateRecordsBySharing(records) updateRecordsByStrip(records) upsertRecord(record) upsertRecord(record, externalFieldName) upsertRecordBySharing(record) upsertRecordBySharing(record, externalFieldName) upsertRecordByStrip(record) upsertRecordByStrip(record, externalFieldName) upsertRecords(records) upsertRecords(records, externalFieldName) upsertRecordsBySharing(records) upsertRecordsBySharing(records, externalFieldName) upsertRecordsByStrip(records) upsertRecordsByStrip(records, externalFieldName) deleteRecord(record) Signature global static void deleteRecord(SObject record) Parameters SObject record Author Digital Align | 05-15-2021 deleteRecordBySharing(record) Signature global static void deleteRecordBySharing(SObject record) Parameters SObject record Author Digital Align | 05-15-2021 deleteRecords(records) Signature global static void deleteRecords(List<sObject> records) Parameters List<sObject> records Author Digital Align | 05-15-2021 deleteRecordsBySharing(records) Signature global static void deleteRecordsBySharing(List<SObject> records) Parameters List<SObject> records Author Digital Align | 05-15-2021 getRecord(queryString) Signature global static SObject getRecord(String queryString) Parameters String queryString Returns SObject Author Digital Align Team | 07-13-2021 getRecord(queryString, records) Signature global static SObject getRecord(String queryString, List<Object> records) Parameters String queryString List<Object> records Returns SObject Author Digital Align Team | 07-13-2021 getRecordBySharing(queryString) Signature global static SObject getRecordBySharing(String queryString) Parameters String queryString Returns SObject Author Digital Align Team | 07-13-2021 getRecordBySharing(queryString, records) Signature global static SObject getRecordBySharing(    String queryString,    List<Object> records  ) Parameters String queryString List<Object> records Returns SObject Author Digital Align Team | 07-13-2021 getRecordByStrip(queryString) Signature global static SObject getRecordByStrip(String queryString) Parameters String queryString Returns SObject Author Digital Align Team | 07-13-2021 getRecordByStrip(queryString, records) Signature global static SObject getRecordByStrip(    String queryString,    List<Object> records  ) Parameters String queryString List<Object> records Returns SObject Author Digital Align Team | 07-13-2021 getRecords(queryString) Signature global static List<SObject> getRecords(String queryString) Parameters String queryString Returns List<SObject> Author Digital Align | 05-11-2021 getRecords(queryString, records) Signature global static List<SObject> getRecords(    String queryString,    List<Object> records  ) Parameters String queryString List<Object> records Returns List<SObject> Author Digital Align | 05-11-2021 getRecordsBySharing(queryString) Signature global static List<SObject> getRecordsBySharing(String queryString) Parameters String queryString Returns List<SObject> Author Digital Align | 05-11-2021 getRecordsBySharing(queryString, records) Signature global static List<SObject> getRecordsBySharing(    String queryString,    List<Object> records  ) Parameters String queryString List<Object> records Returns List<Object> Author Digital Align | 05-11-2021 getRecordsByStrip(queryString) Signature global static List<SObject> getRecordsByStrip(String queryString) Parameters String queryString Returns List<SObject> Author Digital Align | 05-11-2021 getRecordsByStrip(queryString, records) Signature global static List<SObject> getRecordsByStrip(    String queryString,    List<Object> records  ) Parameters String queryString List<Object> records Returns List<SObject> Author Digital Align | 05-11-2021 insertRecord(record) Signature global static SObject insertRecord(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 insertRecordBySharing(record) Signature global static SObject insertRecordBySharing(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 insertRecordByStrip(record) Signature global static SObject insertRecordByStrip(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 insertRecords(records) Signature global static List<SObject> insertRecords(List<SObject> records) Parameters CrudType crudType List<SObject> records SObjectField externalFieldName Returns List<SObject> Author Digital Align | 05-15-2021 insertRecordsBySharing(records) Signature global static List<SObject> insertRecordsBySharing(List<SObject> records) Parameters CrudType crudType List<SObject> records SObjectField externalFieldName Author Digital Align | 05-15-2021 insertRecordsByStrip(records) Signature global static List<SObject> insertRecordsByStrip(List<SObject> records) Parameters CrudType crudType List<SObject> records SObjectField externalFieldName Returns List<SObject> Author Digital Align | 05-15-2021 updateRecord(record) Signature global static SObject updateRecord(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 updateRecordBySharing(record) Signature global static SObject updateRecordBySharing(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 updateRecordByStrip(record) Signature global static SObject updateRecordByStrip(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 updateRecords(records) Signature global static List<SObject> updateRecords(List<sObject> records) Parameters List<sObject> records Returns List<SObject> Author Digital Align | 05-15-2021 updateRecordsBySharing(records) Signature global static List<SObject> updateRecordsBySharing(List<SObject> records) Parameters List<SObject> records Returns List<SObject> Author Digital Align | 05-15-2021 updateRecordsByStrip(records) Signature global static List<SObject> updateRecordsByStrip(List<sObject> records) Parameters List<Object> records Returns List<SObject> Author Digital Align | 05-11-2021 upsertRecord(record) Signature global static SObject upsertRecord(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 upsertRecord(record, externalFieldName) Signature global static SObject upsertRecord(    SObject record,    SObjectField externalFieldName  ) Parameters SObject record SObjectField externalFieldName Returns SObject Author Digital Align | 05-15-2021 upsertRecordBySharing(record) Signature global static SObject upsertRecordBySharing(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 upsertRecordBySharing(record, externalFieldName) Signature global static SObject upsertRecordBySharing(    SObject record,    SObjectField externalFieldName  ) Parameters SObject record SObjectField externalFieldName Returns SObject Author Digital Align | 05-15-2021 upsertRecordByStrip(record) Signature global static SObject upsertRecordByStrip(SObject record) Parameters SObject record Returns SObject Author Digital Align | 05-15-2021 upsertRecordByStrip(record, externalFieldName) Signature global static SObject upsertRecordByStrip(    SObject record,    SObjectField externalFieldName  ) Parameters SObject record SObjectField externalFieldName Returns SObject Author Digital Align | 05-15-2021 upsertRecords(records) Signature global static List<SObject> upsertRecords(List<sObject> records) Parameters List<sObject> records Returns List<SObject> Author Digital Align | 05-15-2021 upsertRecords(records, externalFieldName) Signature global static List<SObject> upsertRecords(    List<sObject> records,    SObjectField externalFieldName  ) Parameters List<sObject> records SObjectField externalFieldName Returns List<SObject> Author Digital Align | 05-15-2021 upsertRecordsBySharing(records) Signature global static List<SObject> upsertRecordsBySharing(List<SObject> records) Parameters List<SObject> records Returns List<SObject> Author Digital Align | 05-15-2021 upsertRecordsBySharing(records, externalFieldName) Signature global static List<SObject> upsertRecordsBySharing(    List<SObject> records,    SObjectField externalFieldName  ) Parameters List<SObject> records SObjectField externalFieldName Returns List<SObject> Author Digital Align | 05-15-2021 upsertRecordsByStrip(records) Signature global static List<SObject> upsertRecordsByStrip(List<sObject> records) Parameters List<Object> records Returns List<SObject> Author Digital Align | 05-11-2021 upsertRecordsByStrip(records, externalFieldName) Signature global static List<SObject> upsertRecordsByStrip(    List<sObject> records,    SObjectField externalFieldName  ) Parameters List<sObject> records SObjectField externalFieldName Returns List<SObject> Author Digital Align | 05-12-2021"
    },
    {
        "title": "DateUtils",
        "fileName": "DateUtils.html",
        "text": "DateUtils Copyright(c) 2021 Digital Align Date Related Methods Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class DateUtils Digital Align Team @reference DateUtils Methods calculateMonthsBetween(startDate, endDate) Get month between two dates formatDateGMT(dt) formatDateTimeGMT(dt) formatDateToDateTime(d) isLastDayOfMonth(d) Find last day of month calculateMonthsBetween(startDate, endDate) Get month between two dates Signature global static Integer calculateMonthsBetween(Date startDate, Date endDate) Parameters Date startDate Date endDate Returns Integer Months in integer formatDateGMT(dt) Signature global static String formatDateGMT(Datetime dt) Parameters Datetime dt Returns String Author Digital Align Team | 07-13-2021 formatDateTimeGMT(dt) Signature global static String formatDateTimeGMT(Datetime dt) Parameters Datetime dt Returns String Author Digital Align Team | 07-13-2021 formatDateToDateTime(d) Signature global static String formatDateToDateTime(Date d) Parameters Date d Returns String Author Digital Align Team | 07-13-2021 isLastDayOfMonth(d) Find last day of month Signature global static Boolean isLastDayOfMonth(Date d) Parameters Date d Returns Boolean return true if day is last day of month"
    },
    {
        "title": "GenericUtils",
        "fileName": "GenericUtils.html",
        "text": "GenericUtils Copyright(c) 2021 Digital Align This class implement basic function for some generic functionality Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class GenericUtils Digital Align Team @reference GenericUtils Methods customException(mesage, values) Custom execption by message and binding values customException(mesage, values) Custom execption by message and binding values Signature global static void customException(String mesage, list<String> values) Parameters Object obj List<String> values Author Digital Align | 05-04-2021"
    },
    {
        "title": "SecurityUtils",
        "fileName": "SecurityUtils.html",
        "text": "SecurityUtils Copyright(c) 2021 Digital Align This class implement utils function for some basic function for handling security Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global inherited sharing class SecurityUtils Digital Align Team @reference SecurityUtils Methods crud(records, permission) Check crud permission for list<Sobject> crud(record, permission) Check crud permission for Sobject decryptBase64Url(encryptedData) method used to decrypt the url parameter decryptUrl(encryptedData) method used to decrypt the url parameter decryptWithManagedIV(securityKeyName, encryptedData) These algorithms are all industry standard Advanced Encryption Standard(AES) algorithms with different size keys. They use cipher block chaining(CBC) and PKCS7 padding encryptUrl(planData) Method used to encrypt the url parameter encryptWithManagedIV(securityKeyName, data) These algorithms are all industry standard Advanced Encryption Standard(AES) algorithms with different size keys. They use cipher block chaining(CBC) and PKCS7 padding generateUUID() Generate Unique UUID stripInaccessible(records, crudType) Use to stripInacessible fields. This prevents a user from persisting changes to fields and objects the do not have access to. crud(records, permission) Check crud permission for list<Sobject> Signature global static Boolean crud(List<SObject> records, CrudType permission) Parameters List<SObject> the SObject type to check permission Type: CrudType create, read, update or delete Returns Boolean Example System.debug(SecurityUtils.crud(new Account(), SecurityUtils.CrudType.READABLE)); crud(record, permission) Check crud permission for Sobject Signature global static Boolean crud(SObject record, CrudType permission) Parameters SObject record CrudType permission Returns Boolean Author Digital Align | 05-15-2021 decryptBase64Url(encryptedData) method used to decrypt the url parameter Signature global static String decryptBase64Url(String encryptedData) Parameters String encryptedData Returns String Author Digital Align Team | 07-28-2021 decryptUrl(encryptedData) method used to decrypt the url parameter Signature global static String decryptUrl(String encryptedData) Parameters String encryptedData Returns String Author Digital Align Team | 07-28-2021 decryptWithManagedIV(securityKeyName, encryptedData) These algorithms are all industry standard Advanced Encryption Standard(AES) algorithms with different size keys. They use cipher block chaining(CBC) and PKCS7 padding Signature global static Blob decryptWithManagedIV(    String securityKeyName,    Blob encryptedData  ) Parameters String securityKeyName Blob encryptedData Returns Blob Author Digital Align Team | 07-29-2021 encryptUrl(planData) Method used to encrypt the url parameter Signature global static String encryptUrl(String planData) Parameters String planData Returns String Author Digital Align Team | 07-28-2021 encryptWithManagedIV(securityKeyName, data) These algorithms are all industry standard Advanced Encryption Standard(AES) algorithms with different size keys. They use cipher block chaining(CBC) and PKCS7 padding Signature global static Blob encryptWithManagedIV(String securityKeyName, Blob data) Parameters String securityKeyName Blob data Returns Blob Author Digital Align Team | 07-29-2021 generateUUID() Generate Unique UUID Signature global static String generateUUID() Returns String Author Digital Align Team | 07-29-2021 stripInaccessible(records, crudType) Use to stripInacessible fields. This prevents a user from persisting changes to fields and objects the do not have access to. Signature global static List<SObject> stripInaccessible(    List<SObject> records,    CrudType crudType  ) Parameters List<SObject> records CrudType crudType Returns List<SObject> Author Digital Align | 05-15-2021"
    },
    {
        "title": "SObjectUtils",
        "fileName": "SObjectUtils.html",
        "text": "SObjectUtils Copyright(c) 2021 Digital Align Basic SObject Functionality Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global inherited sharing class SObjectUtils Digital Align Team @reference SObjectUtils Methods getDescribeSObjectResult(sType) get sObject DescribeSObjectResult by Sobject type getDescribeSObjectResult(records) get sObject DescribeSObjectResult by Sobject type getDescribeSObjectResult(record) get sObject DescribeSObjectResult by Sobject type getFields(sType) Get all field name based on sObject type getFieldSet(sType, fieldSetName) Get fieldset base on the sObject and field set name getObjectName(sType) Get SObject name by passing SObjectType getObjectName(records) Get SObject name by passing Sobject list getObjectName(record) Get SObject name by passing Sobject recordTypeIdByDevName(sType, recordTypeDevName) //Get recordTypeId by Object Name & Record Type Developer Name recordTypeIdByName(sType, recordTypeName) Get recordTypeId by Object Type & Record Type Name resolveChildReferenceByRelationName(sType, childRelationshipMap) Get ChildRelationship  based on the child relationship name resolveReferenceByFieldName(sType, fieldName) Get object field based on the filed name resolveReferenceByRelationName(sType, fieldRelationName) Get object field based on the relationship name getDescribeSObjectResult(sType) get sObject DescribeSObjectResult by Sobject type Signature global static DescribeSObjectResult getDescribeSObjectResult(    SObjectType sType  ) Parameters SObjectType sType Returns DescribeSObjectResult Author Digital Align | 05-14-2021 getDescribeSObjectResult(records) get sObject DescribeSObjectResult by Sobject type Signature global static DescribeSObjectResult getDescribeSObjectResult(    List<SObject> records  ) Parameters List<SObject> records Returns DescribeSObjectResult Author Digital Align | 05-15-2021 getDescribeSObjectResult(record) get sObject DescribeSObjectResult by Sobject type Signature global static DescribeSObjectResult getDescribeSObjectResult(SObject record) Parameters SObject record Returns DescribeSObjectResult Author Digital Align | 05-15-2021 getFields(sType) Get all field name based on sObject type Signature global static Map<String, Schema.SObjectField> getFields(SObjectType sType) Parameters SObjectType sType Returns Map<String, Schema.SObjectField> Return all field of sType Author Digital Align | 05-02-2021 getFieldSet(sType, fieldSetName) Get fieldset base on the sObject and field set name Signature global static FieldSet getFieldSet(SObjectType sType, String fieldSetName) Parameters SObjectType sType String fieldSetName Returns FieldSet Author Digital Align | 05-04-2021 getObjectName(sType) Get SObject name by passing SObjectType Signature global static String getObjectName(SObjectType sType) Parameters SObjectType sType Returns String Author Digital Align | 05-14-2021 getObjectName(records) Get SObject name by passing Sobject list Signature global static String getObjectName(List<SObject> records) Parameters List<SObject> records Returns String Author Digital Align | 05-15-2021 getObjectName(record) Get SObject name by passing Sobject Signature global static String getObjectName(SObject record) Parameters SObject record Returns String Author Digital Align | 05-15-2021 recordTypeIdByDevName(sType, recordTypeDevName) //Get recordTypeId by Object Name & Record Type Developer Name Signature public static Id recordTypeIdByDevName(    SObjectType sType,    string recordTypeDevName  ) Parameters SObjectType sType string recordTypeDevName Returns Id Author Digital Align Team | 07-14-2021 recordTypeIdByName(sType, recordTypeName) Get recordTypeId by Object Type & Record Type Name Signature public static Id recordTypeIdByName(    SObjectType sType,    string recordTypeName  ) Parameters SObjectType sType string recordTypeName Returns Id Author Digital Align Team | 07-14-2021 resolveChildReferenceByRelationName(sType, childRelationshipMap) Get ChildRelationship  based on the child relationship name Signature global static ChildRelationship resolveChildReferenceByRelationName(    SObjectType sType,    String childRelationshipMap  ) Parameters SObjectType sType String ChildRelationshipMap Returns ChildRelationship Author Digital Align | 05-04-2021 resolveReferenceByFieldName(sType, fieldName) Get object field based on the filed name Signature global static Schema.SObjectField resolveReferenceByFieldName(    SObjectType sType,    String fieldName  ) Parameters sObjectType sType sObjectType String fieldName Returns Schema.SObjectField Author Digital Align | 05-02-2021 resolveReferenceByRelationName(sType, fieldRelationName) Get object field based on the relationship name Signature global static Schema.SObjectField resolveReferenceByRelationName(    SObjectType sType,    String fieldRelationName  ) Parameters SObjectType sType String fieldRelationName Returns Schema.SObjectField Author Digital Align | 05-02-2021"
    },
    {
        "title": "SObjectWithoutSharing",
        "fileName": "SObjectWithoutSharing.html",
        "text": "SObjectWithoutSharing Copyright(c) 2021 Digital Align Signature global without sharing class SObjectWithoutSharing Digital Align Team @reference SObjectWithoutSharing Methods assignProfileIdToUser(userObj, profileId) The reason behind this is external users or guest users and so on will not have access to ProfileId field in user object. profileID need to assign inside without sharing context @Reference Solution for a known issue : System.SObjectException: Field is not writeable: User.ProfileId https://salesforce.stackexchange.com/questions/123105/sobjectexception-field-is-not-writeable-user-profileid https://www.infallibletechie.com/2016/06/systemsobjectexception-field-is-not.html convertLead(leadToConvert) Convert lead into account and contact, running without sharing ocntext ,as community user doesn't has permission to convert lead getRecords(queryString) Dynamic SOQL  query getRecords(queryString, values) Dynamic SOQL query with variable binding processRecords(crudType, records, externalFieldName) Perform dml operation renderStoredEmailTemplate(emailMessage) render stored email template Run wihout sharing context as certain object doesn't have access to object such as lead assignProfileIdToUser(userObj, profileId) The reason behind this is external users or guest users and so on will not have access to ProfileId field in user object. profileID need to assign inside without sharing context @Reference Solution for a known issue : System.SObjectException: Field is not writeable: User.ProfileId https://salesforce.stackexchange.com/questions/123105/sobjectexception-field-is-not-writeable-user-profileid https://www.infallibletechie.com/2016/06/systemsobjectexception-field-is-not.html Signature @NamespaceAccessible public static user assignProfileIdToUser(User userObj, ID profileId) Parameters User userObj ID profileId Returns user Author Digital Align Team | 07-23-2021 convertLead(leadToConvert) Convert lead into account and contact, running without sharing ocntext ,as community user doesn't has permission to convert lead Signature public static Database.LeadConvertResult convertLead(    Database.LeadConvert leadToConvert  ) Parameters Database.LeadConvert leadToConvert Returns Database.LeadConvertResult Author Digital Align Team | 08-23-2021 getRecords(queryString) Dynamic SOQL  query Signature public static List<SObject> getRecords(String queryString) Parameters String queryString Returns List<SObject> Author Digital Align | 05-03-2021 getRecords(queryString, values) Dynamic SOQL query with variable binding Signature public static List<SObject> getRecords(    String queryString,    List<Object> values  ) Parameters String queryString List<Object> values Returns List<SObject> Author Digital Align | 05-04-2021 processRecords(crudType, records, externalFieldName) Perform dml operation Signature public static List<Sobject> processRecords(    CrudType crudType,    List<Sobject> records,    SObjectField externalFieldName  ) Parameters CrudType crudType List<Sobject> records SObjectField externalFieldName Returns List<Sobject> Author Digital Align | 05-12-2021 renderStoredEmailTemplate(emailMessage) render stored email template Run wihout sharing context as certain object doesn't have access to object such as lead Signature public static Messaging.SingleEmailMessage renderStoredEmailTemplate(    Messaging.SingleEmailMessage emailMessage  ) Parameters Messaging.SingleEmailMessage emailMessage Returns Messaging.SingleEmailMessage Author Digital Align Team | 09-06-2021"
    },
    {
        "title": "SObjectWithSharing",
        "fileName": "SObjectWithSharing.html",
        "text": "SObjectWithSharing Copyright(c) 2021 Digital Align Signature public with sharing class SObjectWithSharing Digital Align Team @reference SObjectWithSharing Methods getRecords(queryString) Dynamic SOQL query getRecords(queryString, values) Dynamic SOQL query with variable binding processRecords(crudType, records, externalFieldName) Perform dml operation getRecords(queryString) Dynamic SOQL query Signature public static List<SObject> getRecords(String queryString) Parameters String queryString Returns List<SObject> Author Digital Align | 05-03-2021 getRecords(queryString, values) Dynamic SOQL query with variable binding Signature public static List<SObject> getRecords(    String queryString,    List<Object> values  ) Parameters String queryString List<Object> values Returns List<SObject> Author Digital Align | 05-04-2021 processRecords(crudType, records, externalFieldName) Perform dml operation Signature public static List<Sobject> processRecords(    CrudType crudType,    List<Sobject> records,    SObjectField externalFieldName  ) Parameters CrudType crudType List<Sobject> records SObjectField externalFieldName Returns List<Sobject> Author Digital Align | 05-12-2021"
    },
    {
        "title": "UserRepository",
        "fileName": "UserRepository.html",
        "text": "UserRepository Copyright(c) 2021 Digital Align Repository to pickup some basic user related data Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global inherited sharing class UserRepository extends DatabaseUtils Digital Align Team @reference UserRepository Methods fetchProfileByName(profileName) fetch Profile by profile name fetchUserAccountByUserId(userId) get Community user account detail by user id getUserAccountOwnerId(id) For Community user, get ownerid of current user getUserById(id) Get user record based on user id passed fetchProfileByName(profileName) fetch Profile by profile name Signature global static Profile fetchProfileByName(String profileName) Parameters String profileName Returns Profile Author Digital Align Team | 07-23-2021 fetchUserAccountByUserId(userId) get Community user account detail by user id Signature global static Account fetchUserAccountByUserId(Id userId) Parameters Id userId Returns Account Author Digital Align Team | 07-23-2021 getUserAccountOwnerId(id) For Community user, get ownerid of current user Signature global static Id getUserAccountOwnerId(Id id) Parameters Id id Returns Id Author Digital Align Team | 07-15-2021 getUserById(id) Get user record based on user id passed Signature global static User getUserById(Id id) Parameters Object id Returns User Author Digital Align | 05-11-2021"
    },
    {
        "title": "UserUtils",
        "fileName": "UserUtils.html",
        "text": "UserUtils Copyright(c) 2021 Digital Align This class implement utils function for some basic function for handling user functionality Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global inherited sharing class UserUtils Digital Align Team @reference UserUtils Methods assignProfileIdToUser(userObj, profileId) The reason behind this is external users or guest users and so on will not have access to ProfileId field in user object. profileID need to assign inside without sharing context @Reference Solution for a known issue : System.SObjectException: Field is not writeable: User.ProfileId https://salesforce.stackexchange.com/questions/123105/sobjectexception-field-is-not-writeable-user-profileid https://www.infallibletechie.com/2016/06/systemsobjectexception-field-is-not.html fetchUserAccountByUserId(userId) fetch community user account details getCurrentUser() get the current user record fetchs all field from user without checking permission isGuestUser() Check te user is guest or standard validateUserNameExists(userName) check whether salesforce username available to use assignProfileIdToUser(userObj, profileId) The reason behind this is external users or guest users and so on will not have access to ProfileId field in user object. profileID need to assign inside without sharing context @Reference Solution for a known issue : System.SObjectException: Field is not writeable: User.ProfileId https://salesforce.stackexchange.com/questions/123105/sobjectexception-field-is-not-writeable-user-profileid https://www.infallibletechie.com/2016/06/systemsobjectexception-field-is-not.html Signature global static user assignProfileIdToUser(User userObj, ID profileId) Parameters User userObj ID profileId Returns user Author Digital Align Team | 07-23-2021 fetchUserAccountByUserId(userId) fetch community user account details Signature global static Account fetchUserAccountByUserId(Id userId) Parameters Id userId Returns Account Author Digital Align Team | 07-23-2021 getCurrentUser() get the current user record fetchs all field from user without checking permission Signature global static User getCurrentUser() Returns User Author Digital Align | 05-11-2021 isGuestUser() Check te user is guest or standard Signature global static Boolean isGuestUser() Returns Boolean Author Digital Align | 05-11-2021 validateUserNameExists(userName) check whether salesforce username available to use Signature global static Boolean validateUserNameExists(String userName) Parameters String userName Returns Boolean Author Digital Align Team | 07-23-2021"
    },
    {
        "title": "AbstractAPIProvider",
        "fileName": "AbstractAPIProvider.html",
        "text": "AbstractAPIProvider Copyright(c) 2021 Digital Align Signature public abstract with sharing class AbstractAPIProvider Digital Align Team @reference AbstractAPIProvider Constructors AbstractAPIProvider(classType) AbstractAPIProvider(classType) Signature public AbstractAPIProvider(Type classType) AbstractAPIProvider Methods executeRequest(params) executeRequest(params) Signature public virtual Map<String, Object> executeRequest(    Map<String, object> params  ) Parameters Map<String object> params ; Returns abstract Author Digital Align | 08-12-2021"
    },
    {
        "title": "APICaller",
        "fileName": "APICaller.html",
        "text": "APICaller Copyright(c) 2021 Digital Align Signature public with sharing class APICaller Digital Align Team @reference APICaller Methods execute(requestBody) execute(requestBody) Signature public static HttpResponse execute(String requestBody) Parameters String requestBody Returns HttpResponse Author Digital Align | 08-12-2021"
    },
    {
        "title": "APIConfiguration",
        "fileName": "APIConfiguration.html",
        "text": "APIConfiguration Copyright(c) 2021 Digital Align Signature public with sharing class APIConfiguration Digital Align Team @reference APIConfiguration Properties Name Signature apiConfig public static APISetting__mdt apiConfig APIConfiguration Methods getAPIConfig() setAPIConfig(apiName) getAPIConfig() Signature public static APISetting__mdt getAPIConfig() Returns APISetting__mdt Author Digital Align | 08-12-2021 setAPIConfig(apiName) Signature public static void setAPIConfig(APINames apiName) Parameters APINames apiName Author Digital Align | 08-12-2021"
    },
    {
        "title": "APINames",
        "fileName": "APINames.html",
        "text": "APINames Copyright(c) 2021 Digital Align Signature global enum APINames Values DOCUMENTSCAN Digital Align Team @reference"
    },
    {
        "title": "ChartRepository",
        "fileName": "ChartRepository.html",
        "text": "ChartRepository Signature public with sharing class ChartRepository extends DatabaseUtils ChartRepository Methods fetchCustomDataSourceClassList(searchQuery) fetchDataFromQuery(soqlQuery) fetchCustomDataSourceClassList(searchQuery) Signature public static List<List<SObject>> fetchCustomDataSourceClassList(    String searchQuery  ) fetchDataFromQuery(soqlQuery) Signature public static List<object> fetchDataFromQuery(String soqlQuery)"
    },
    {
        "title": "DealerConstants",
        "fileName": "DealerConstants.html",
        "text": "DealerConstants Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class DealerConstants Digital Align Team @reference DealerConstants Properties Name Signature DEALER_ADMIN_ACCOUNT_RECORDTYPE public static final String DEALER_ADMIN_ACCOUNT_RECORDTYPE DEALER_ADMIN_ACOUNT_TYPE public static final String DEALER_ADMIN_ACOUNT_TYPE DEALER_ADMIN_CONTACT_RECORDTYPE public static final String DEALER_ADMIN_CONTACT_RECORDTYPE DEALER_ADMIN_CONTACT_TYPE public static final String DEALER_ADMIN_CONTACT_TYPE DEALER_ADMIN_USER_PROFILE public static final String DEALER_ADMIN_USER_PROFILE DEALER_COMMUNITY_PERMISSION_SET public static final String DEALER_COMMUNITY_PERMISSION_SET DEALER_EMPLOYEE_CONTACT_RECORDTYPE public static final String DEALER_EMPLOYEE_CONTACT_RECORDTYPE DEALER_EMPLOYEE_CONTACT_TYPE public static final String DEALER_EMPLOYEE_CONTACT_TYPE DEALER_EMPLOYEE_USER_PROFILE public static final String DEALER_EMPLOYEE_USER_PROFILE DEALER_LEAD_RECORDTYPE public static final String DEALER_LEAD_RECORDTYPE LEAD_INITIAL_STATUS public static final String LEAD_INITIAL_STATUS LEAD_SUBMITTED_STATUS public static final String LEAD_SUBMITTED_STATUS"
    },
    {
        "title": "DealerEmailService",
        "fileName": "DealerEmailService.html",
        "text": "DealerEmailService Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class DealerEmailService extends AbstractService Digital Align Team @reference DealerEmailService Constructors DealerEmailService() DealerEmailService() Signature public DealerEmailService() DealerEmailService Methods getInstance() Provides a singleton instance of DealerEmailService from which all other class methods can be accessed. sendDealerRegisterInvitation(leadRecord) sendLeadRejectionEmail(leadRecord) getInstance() Provides a singleton instance of DealerEmailService from which all other class methods can be accessed. Signature public static DealerEmailService getInstance() Returns Object  singleton Author Digital Align Team | 07-12-2021 sendDealerRegisterInvitation(leadRecord) Signature global virtual void sendDealerRegisterInvitation(Lead leadRecord) Parameters Lead leadRecord Returns virtual Author Digital Align Team | 08-05-2021 sendLeadRejectionEmail(leadRecord) Signature global virtual void sendLeadRejectionEmail(Lead leadRecord) Parameters Lead leadRecord Returns virtual Author Digital Align Team | 08-05-2021"
    },
    {
        "title": "DealerSiteRepository",
        "fileName": "DealerSiteRepository.html",
        "text": "DealerSiteRepository Copyright(c) 2021 Digital Align Signature public with sharing class DealerSiteRepository extends DatabaseUtils Digital Align Team @reference DealerSiteRepository Methods fetchApprovedRecords(status) fetchContentVersion(contentVersionId) fetchDocumentRequestsByLeadId(leadId) fetchEmailTemplateByName(templateName) fetchLeadAndSurveyByLeadId(leadId) fetchLeadAndSurveyByLeadId(leadId, templateName) fetchPendingRecords(status) fetchApprovedRecords(status) Signature public static List<Contact> fetchApprovedRecords(String status) Returns List<lead> Author Digital Align Team | 07-22-2021 fetchContentVersion(contentVersionId) Signature public static ContentVersion fetchContentVersion(string contentVersionId) Parameters string contentVersionId Returns ContentVersion Author Digital Align | 07-28-2021 fetchDocumentRequestsByLeadId(leadId) Signature public static List<DocumentRequest__c> fetchDocumentRequestsByLeadId(    string leadId  ) Parameters string leadId Returns List<DocumentRequest__c> Author Digital Align | 08-01-2021 fetchEmailTemplateByName(templateName) Signature public static EmailTemplate fetchEmailTemplateByName(string templateName) Parameters string templateName Returns EmailTemplate Author Digital Align | 07-16-2021 fetchLeadAndSurveyByLeadId(leadId) Signature public static Lead fetchLeadAndSurveyByLeadId(Id leadId) Parameters Id leadId Returns Lead Author Digital Align Team | 07-16-2021 fetchLeadAndSurveyByLeadId(leadId, templateName) Signature public static Lead fetchLeadAndSurveyByLeadId(    Id leadId,    String templateName  ) Parameters string leadId String templateName Returns Lead Author Digital Align Team | 08-25-2021 fetchPendingRecords(status) Signature public static List<lead> fetchPendingRecords(String status) Returns List<lead> Author Digital Align Team | 07-22-2021"
    },
    {
        "title": "DealerSiteService",
        "fileName": "DealerSiteService.html",
        "text": "DealerSiteService Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class DealerSiteService extends AbstractService Digital Align Team @reference DealerSiteService Constructors DealerSiteService() DealerSiteService() Signature public DealerSiteService() DealerSiteService Methods createDocumentRequests(leadId) fetchApprovedRecords(status) fetchDocumentRequests(leadId) fetchLeadAndSurvey(leadId, params) fetch lead and survey record fetchPendingRecords(status) fetchPickListValues(params) fetch picklsit value of salesforce field fetchSurveyTemplates(params) fetch survey template for dealer getInstance() Provides a singleton instance of DealerSiteService from which all other class methods can be accessed. inviteDealer(dealerRecord) Invite Dealer to Community portal linkContentVersionToEntity(params) link content version to entity updateLeadRecord(params) update lead record with survey createDocumentRequests(leadId) Signature global virtual List<DocumentRequest__c> createDocumentRequests(    String leadId  ) Parameters String leadId Returns List<DocumentRequest__c> Author Digital Align | 08-01-2021 fetchApprovedRecords(status) Signature global virtual List<Contact> fetchApprovedRecords(String status) Returns List<Lead> Author Digital Align Team | 07-01-2021 fetchDocumentRequests(leadId) Signature global virtual List<DocumentRequest__c> fetchDocumentRequests(string leadId) Parameters string leadId Returns List<DocumentRequest__c> Author Digital Align | 08-01-2021 fetchLeadAndSurvey(leadId, params) fetch lead and survey record Signature global virtual Lead fetchLeadAndSurvey(    String leadId,    Map<String, Object> params  ) Parameters Map<String Object> params Returns virtual Author Digital Align Team | 08-25-2021 fetchPendingRecords(status) Signature global virtual List<Lead> fetchPendingRecords(String status) Returns List<Lead> Author Digital Align Team | 07-01-2021 fetchPickListValues(params) fetch picklsit value of salesforce field Signature global virtual Map<String, Map<String, Object>> fetchPickListValues(    Map<String, Object> params  ) Parameters Map<String Object> params Returns Map<String, Map<String, Object>> Author Digital Align Team | 09-02-2021 Example format of parameter { Lead : [ \"LeadSource\", \"Staus\" ] } fetchSurveyTemplates(params) fetch survey template for dealer Signature global virtual List<Survey__c> fetchSurveyTemplates(    Map<String, Object> params  ) Returns List<Survey__c> Author Digital Align Team | 07-22-2021 getInstance() Provides a singleton instance of DealerSiteService from which all other class methods can be accessed. Signature public static DealerSiteService getInstance() Returns Object  singleton Author Digital Align Team | 07-22-2021 inviteDealer(dealerRecord) Invite Dealer to Community portal Signature global virtual Lead inviteDealer(Lead dealerRecord) Parameters Lead dealerRecord Returns Lead Author Digital Align | 07-16-2021 linkContentVersionToEntity(params) link content version to entity Signature global virtual ContentVersion linkContentVersionToEntity(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ContentVersion Author Digital Align Team | 08-23-2021 updateLeadRecord(params) update lead record with survey Signature global virtual Lead updateLeadRecord(Map<String, Object> params) Parameters Map<String Object> params Returns Lead Author Digital Align Team | 09-03-2021"
    },
    {
        "title": "DisplayImageController",
        "fileName": "DisplayImageController.html",
        "text": "DisplayImageController Copyright(c) 2019 Terafina Inc Service for getting dynamic document URLs Signature public with sharing class DisplayImageController DisplayImageController Properties Name Signature imageHeight public String imageHeight imageName public String imageName imageUrl public String imageUrl imageWidth public String imageWidth DisplayImageController Methods getImageUrl() getImageUrl() Signature public String getImageUrl() Returns String Author Digital Align Team | 08-18-2021"
    },
    {
        "title": "DocumentScanAdapter",
        "fileName": "DocumentScanAdapter.html",
        "text": "DocumentScanAdapter Copyright(c) 2021 Digital Align Signature public with sharing class DocumentScanAdapter Digital Align Team @reference DocumentScanAdapter Methods invokeAPI(params) invokeAPI(params) Signature public static Map<String, object> invokeAPI(Map<String, object> params) Parameters Map<String object> params Returns Map<String, object> Author Digital Align | 08-12-2021"
    },
    {
        "title": "DocumentScanProvider",
        "fileName": "DocumentScanProvider.html",
        "text": "DocumentScanProvider Copyright(c) 2021 Digital Align Signature public with sharing class DocumentScanProvider extends AbstractAPIProvider Digital Align Team @reference DocumentScanProvider Constructors DocumentScanProvider() DocumentScanProvider() Signature public DocumentScanProvider()"
    },
    {
        "title": "FinancialInstituteConstants",
        "fileName": "FinancialInstituteConstants.html",
        "text": "FinancialInstituteConstants Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class FinancialInstituteConstants Digital Align Team @reference FinancialInstituteConstants Properties Name Signature FIN_INST_ACCOUNT_RECORDTYPE public static final String FIN_INST_ACCOUNT_RECORDTYPE FIN_INST_ACOUNT_TYPE public static final String FIN_INST_ACOUNT_TYPE FIN_INST_COMMUNITY_PEMRISSION_SET public static final String FIN_INST_COMMUNITY_PEMRISSION_SET FIN_INST_EMPLOYEE_CONTACT_RECORDTYPE public static final String FIN_INST_EMPLOYEE_CONTACT_RECORDTYPE FIN_INST_EMPLOYEE_CONTACT_TYPE public static final String FIN_INST_EMPLOYEE_CONTACT_TYPE FIN_INST_EMPLOYEE_USER_PROFILE public static final String FIN_INST_EMPLOYEE_USER_PROFILE LEAD_REJECTED_STATUS public static final String LEAD_REJECTED_STATUS"
    },
    {
        "title": "FinancialInstituteSiteRepository",
        "fileName": "FinancialInstituteSiteRepository.html",
        "text": "FinancialInstituteSiteRepository Copyright(c) 2021 Digital Align Signature public with sharing class FinancialInstituteSiteRepository extends DatabaseUtils Digital Align Team @reference FinancialInstituteSiteRepository Methods fetchAccountById(accountId) fetch account by account Id fetchAccountById(accountId) fetch account by account Id Signature public static Account fetchAccountById(String accountId) Parameters string accountId Returns Account Author Digital Align | 07-23-2021"
    },
    {
        "title": "FinancialInstituteSiteService",
        "fileName": "FinancialInstituteSiteService.html",
        "text": "FinancialInstituteSiteService Copyright(c) 2021 Digital Align Financial Institute Site Service Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class FinancialInstituteSiteService extends AbstractService Digital Align Team @reference FinancialInstituteSiteService Constructors FinancialInstituteSiteService() FinancialInstituteSiteService() Signature public FinancialInstituteSiteService() FinancialInstituteSiteService Methods approveLead(params) approve the lead and create a business account fetchSurveyTemplates(params) fetch survey template for FinInst getInstance() Provides a singleton instance of FinancialInstituteSiteService from which all other class methods can be accessed. rejectLead(params) Lead is rejected by financial institute employee resetDealerInviteLink(params) approveLead(params) approve the lead and create a business account Signature global virtual Lead approveLead(Map<String, Object> params) Parameters Map<String Object> params Returns Lead Author Digital Align Team | 08-26-2021 fetchSurveyTemplates(params) fetch survey template for FinInst Signature global virtual List<Survey__c> fetchSurveyTemplates(    Map<String, Object> params  ) Returns List<Survey__c> Author Digital Align Team | 07-22-2021 getInstance() Provides a singleton instance of FinancialInstituteSiteService from which all other class methods can be accessed. Signature public static FinancialInstituteSiteService getInstance() Returns Object  singleton Author Digital Align Team | 07-27-2021 rejectLead(params) Lead is rejected by financial institute employee Signature global virtual Lead rejectLead(Map<String, Object> params) Parameters Map<String Object> params Returns Lead Author Digital Align | 08-09-2021 resetDealerInviteLink(params) Signature global virtual Lead resetDealerInviteLink(Map<String, Object> params) Parameters Map<String Object> params Returns Lead Author Digital Align Team | 08-26-2021"
    },
    {
        "title": "LWCDealerSiteController",
        "fileName": "LWCDealerSiteController.html",
        "text": "LWCDealerSiteController Copyright(c) 2021 Digital Align functionality related dealer LWC components Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class LWCDealerSiteController Digital Align Team @reference LWCDealerSiteController Methods createDealerEmployee(params) create dealer employee deleteFilesByEntityId(entityId) Delete Files By Entity Id fetchDealerEmployeeActiveStatus(recordId) fetchDocumentRequests(leadId) fetchLeadAndSurvey(leadId, params) fetch lead and survey child records fetchLoggedinUserContactDetails() fetchPickListValues(params) fetchSurveyTemplates(params) generate survey template for dealer inviteDealer(newDealerRecord) create new lead on invite of dealer linkContentVersionToEntity(params) link content version to entity sendOTPMessage(dealerPhone) send OTP Message to Dealer updateDealerEmployeeActiveStatus(params) updateLeadAndSurveyRecords(params) update lead and survey record enter by dealer createDealerEmployee(params) create dealer employee Signature @AuraEnabled global static ApexResponse createDealerEmployee(Map<String, Object> params) Parameters user userData Returns ApexResponse Author Digital Align | 07-22-2021 deleteFilesByEntityId(entityId) Delete Files By Entity Id Signature @AuraEnabled global static ApexResponse deleteFilesByEntityId(Id entityId) Parameters Id entityId Returns ApexResponse Author Digital Align | 08-03-2021 fetchDealerEmployeeActiveStatus(recordId) Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchDealerEmployeeActiveStatus(string recordId) Parameters string recordId Returns ApexResponse Author Digital Align | 08-24-2021 fetchDocumentRequests(leadId) Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchDocumentRequests(string leadId) Parameters string leadId Returns ApexResponse Author Digital Align | 08-01-2021 fetchLeadAndSurvey(leadId, params) fetch lead and survey child records Signature global static ApexResponse fetchLeadAndSurvey(    String leadId,    Map<String, Object> params  ) Parameters String leadId boolean isEncrypted Returns ApexResponse Author Digital Align Team | 08-24-2021 fetchLoggedinUserContactDetails() Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchLoggedinUserContactDetails() Returns ApexResponse Author Digital Align | 09-01-2021 fetchPickListValues(params) Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchPickListValues(Map<String, Object> params) Parameters String objectType List<string> picklistFields Returns ApexResponse Author Digital Align | 08-02-2021 fetchSurveyTemplates(params) generate survey template for dealer Signature @AuraEnabled global static ApexResponse fetchSurveyTemplates(Map<String, Object> params) Returns ApexResponse Author Digital Align Team | 07-22-2021 inviteDealer(newDealerRecord) create new lead on invite of dealer Signature @AuraEnabled global static ApexResponse inviteDealer(String newDealerRecord) Parameters String newDealerRecord Returns ApexResponse Author Digital Align | 07-16-2021 linkContentVersionToEntity(params) link content version to entity Signature global static ApexResponse linkContentVersionToEntity(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 08-23-2021 sendOTPMessage(dealerPhone) send OTP Message to Dealer Signature @AuraEnabled global static ApexResponse sendOTPMessage(string dealerPhone) Parameters String dealerPhone Returns ApexResponse Author Digital Align | 07-22-2021 updateDealerEmployeeActiveStatus(params) Signature global static ApexResponse updateDealerEmployeeActiveStatus(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align | 08-24-2021 updateLeadAndSurveyRecords(params) update lead and survey record enter by dealer Signature global static ApexResponse updateLeadAndSurveyRecords(    Map<String, Object> params  ) Parameters Lead dealerRecord String surveyRecord Returns ApexResponse Author Digital Align | 07-16-2021"
    },
    {
        "title": "LWCFinancialInstituteSiteController",
        "fileName": "LWCFinancialInstituteSiteController.html",
        "text": "LWCFinancialInstituteSiteController Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class LWCFinancialInstituteSiteController Digital Align Team @reference LWCFinancialInstituteSiteController Methods approveLead(params) Lead is approved by financial institute employee and lead is converted into account,contact and user createFinancialInstituteAccount(params) createFinInstEmployeeAccount(params) fetchFinancialInstituteAccount() fetchSurveyTemplates(params) rejectLead(params) Lead is rejected by financial institute employee resetDealerInviteLink(params) reset invite link approveLead(params) Lead is approved by financial institute employee and lead is converted into account,contact and user Signature @AuraEnabled global static ApexResponse approveLead(Map<String, Object> params) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 08-27-2021 createFinancialInstituteAccount(params) Signature global static ApexResponse createFinancialInstituteAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-27-2021 createFinInstEmployeeAccount(params) Signature global static ApexResponse createFinInstEmployeeAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-27-2021 fetchFinancialInstituteAccount() Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchFinancialInstituteAccount() Returns ApexResponse Author Digital Align | 07-23-2021 fetchSurveyTemplates(params) Signature @AuraEnabled global static ApexResponse fetchSurveyTemplates(Map<String, Object> params) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 08-26-2021 rejectLead(params) Lead is rejected by financial institute employee Signature @AuraEnabled global static ApexResponse rejectLead(Map<String, Object> params) Parameters Map<String Object> params Returns ApexResponse Author Digital Align | 08-09-2021 resetDealerInviteLink(params) reset invite link Signature @AuraEnabled global static ApexResponse resetDealerInviteLink(Map<String, Object> params) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 08-26-2021"
    },
    {
        "title": "NotificationService",
        "fileName": "NotificationService.html",
        "text": "NotificationService Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class NotificationService extends AbstractService NotificationService Constructors NotificationService() NotificationService() Signature public NotificationService() NotificationService Methods getInstance() Provides a singleton instance of DealerSiteService from which all other class methods can be accessed. sendOTPMessage(dealerPhone) Method to send OTP message to phone. getInstance() Provides a singleton instance of DealerSiteService from which all other class methods can be accessed. Signature public static NotificationService getInstance() Returns Object  singleton Author Digital Align Team | 07-22-2021 sendOTPMessage(dealerPhone) Method to send OTP message to phone. Signature global virtual String sendOTPMessage(String dealerPhone) Returns Object  String Author Digital Align Team | 07-22-2021"
    },
    {
        "title": "SurveyRepository",
        "fileName": "SurveyRepository.html",
        "text": "SurveyRepository Copyright(c) 2021 Digital Align Signature public with sharing class SurveyRepository extends DatabaseUtils Digital Align Team @reference SurveyRepository Methods fetchSurveyTemplateByCondition(customCondition) getch survey template by passing custom conditions to where clause fetchSurveyTemplatesByName(templateName) Fetch survey template by template unique name fetchSurveyTemplateByCondition(customCondition) getch survey template by passing custom conditions to where clause Signature public static List<SurveyTemplate__c> fetchSurveyTemplateByCondition(    String customCondition  ) Parameters String customCondition Returns List<SurveyTemplate__c> Author Digital Align Team | 08-25-2021 fetchSurveyTemplatesByName(templateName) Fetch survey template by template unique name Signature public static List<SurveyTemplate__c> fetchSurveyTemplatesByName(    String templateName  ) Parameters String templateName Returns List<SurveyTemplate__c> Author Digital Align Team | 08-25-2021"
    },
    {
        "title": "SurveyResolver",
        "fileName": "SurveyResolver.html",
        "text": "SurveyResolver Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class SurveyResolver extends AbstractService Digital Align Team @reference SurveyResolver Constructors SurveyResolver() SurveyResolver() Signature public SurveyResolver() SurveyResolver Methods buildSurvey(surveyTemlates) build survey object based on the template list fetchSurveyByTemplateName(templateName) fetch survey by template Name getInstance() Provides a singleton instance of SurveyResolver from which all other class methods can be accessed. buildSurvey(surveyTemlates) build survey object based on the template list Signature global virtual List<Survey__c> buildSurvey(    List<SurveyTemplate__c> surveyTemlates  ) Parameters List<SurveyTemplate__c> surveyTemlates Returns List<Survey__c> Author Digital Align Team | 08-25-2021 fetchSurveyByTemplateName(templateName) fetch survey by template Name Signature global virtual List<Survey__c> fetchSurveyByTemplateName(    String templateName  ) Parameters String templateName Returns List<Survey__c> Author Digital Align Team | 08-25-2021 getInstance() Provides a singleton instance of SurveyResolver from which all other class methods can be accessed. Signature public static SurveyResolver getInstance() Returns Object  singleton Author Digital Align Team | 07-22-2021"
    },
    {
        "title": "AbstractService",
        "fileName": "AbstractService.html",
        "text": "AbstractService Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class AbstractService Digital Align Team @reference AbstractService Constructors AbstractService() AbstractService(classType) AbstractService() Signature public AbstractService() AbstractService(classType) Signature public AbstractService(Type classType) AbstractService Methods getInstance(classType) Provides a singleton instance of classType from which all other class methods can be accessed. getInstance(classType) Provides a singleton instance of classType from which all other class methods can be accessed. Signature global static Object getInstance(System.Type classType) Parameters System.Type classType Returns Object  singleton Author Digital Align Team | 07-12-2021"
    },
    {
        "title": "DealerAccountCreationService",
        "fileName": "DealerAccountCreationService.html",
        "text": "DealerAccountCreationService Copyright(c) 2021 Digital Align Dealer Account Creation Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class DealerAccountCreationService extends AbstractService Digital Align Team @reference DealerAccountCreationService Constructors DealerAccountCreationService() DealerAccountCreationService() Signature public DealerAccountCreationService() DealerAccountCreationService Methods assignCommunityPermissionSet(userId) assign permission set for user assignCommunityPermissionSetAsync(userId) assign permission set for user in future context(to Avoid mixed dml exception) convertDealerLead(leadObj) convert lead into contact and account createDealerBusinessUserAccount(params) Create Dealer Business Account, which internal calls convertDealerLead, updateDealerContact,updateDealerAccount and createDealerUser functionality createDealerEmployeeContact(businessContactObj, businessAccountObj) create contact for dealer employee createDealerEmployeeUser(businessContactObj, businessAccountObj) create employee user for an dealer createDealerEmployeeUserAccount(params) Create Dealer Employee Business Account, which internal calls updateDealerEmployeeContact, createDealerEmployeeUser functionality createDealerUser(leadObj, businessContactObj) Create dealer user account and profile asssigned \"DealerCommunity Profile\" fetchDealerEmployeeActiveStatus(recordId) fetchLoggedinUserContactDetails() getInstance() Provides a singleton instance of DealerAccountCreationService from which all other class methods can be accessed. updateDealerAccount(leadObj, businessAccountObj) update dealer Account detail which are not updated during lead conversion updateDealerContact(leadObj, businessContactObj) update dealer contact detail which are not updated during lead conversion updateDealerEmployeeActiveStatus(params) assignCommunityPermissionSet(userId) assign permission set for user Signature global virtual List<PermissionSetAssignment> assignCommunityPermissionSet(    Id userId  ) Parameters Id userObj Returns virtual Author Digital Align Team | 07-14-2021 assignCommunityPermissionSetAsync(userId) assign permission set for user in future context(to Avoid mixed dml exception) Signature @future global static void assignCommunityPermissionSetAsync(Id userId) Parameters Id userId Author Digital Align Team | 07-14-2021 convertDealerLead(leadObj) convert lead into contact and account Signature global virtual Database.LeadConvertResult convertDealerLead(Lead leadObj) Parameters Lead leadObj Returns Database.LeadConvertResult Author Digital Align Team | 07-15-2021 createDealerBusinessUserAccount(params) Create Dealer Business Account, which internal calls convertDealerLead, updateDealerContact,updateDealerAccount and createDealerUser functionality Signature global virtual Object createDealerBusinessUserAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns Object Author Digital Align Team | 07-13-2021 createDealerEmployeeContact(businessContactObj, businessAccountObj) create contact for dealer employee Signature global virtual Contact createDealerEmployeeContact(    Contact businessContactObj,    Account businessAccountObj  ) Parameters Contact businessContactObj Returns Contact Author Digital Align Team | 07-15-2021 createDealerEmployeeUser(businessContactObj, businessAccountObj) create employee user for an dealer Signature global virtual User createDealerEmployeeUser(    Contact businessContactObj,    Account businessAccountObj  ) Parameters Contact businessContactObj Returns User Author Digital Align Team | 07-15-2021 createDealerEmployeeUserAccount(params) Create Dealer Employee Business Account, which internal calls updateDealerEmployeeContact, createDealerEmployeeUser functionality Signature global virtual Object createDealerEmployeeUserAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns Object Author Digital Align Team | 07-13-2021 createDealerUser(leadObj, businessContactObj) Create dealer user account and profile asssigned \"DealerCommunity Profile\" Signature global virtual User createDealerUser(    Lead leadObj,    Contact businessContactObj  ) Parameters Lead leadObj Contact businessContactObj Returns virtual Author Digital Align Team | 07-15-2021 fetchDealerEmployeeActiveStatus(recordId) Signature global virtual Object fetchDealerEmployeeActiveStatus(string recordId) Parameters string recordId Returns virtual Author Digital Align | 08-24-2021 fetchLoggedinUserContactDetails() Signature global virtual Contact fetchLoggedinUserContactDetails() Returns virtual Author Digital Align | 09-01-2021 getInstance() Provides a singleton instance of DealerAccountCreationService from which all other class methods can be accessed. Signature public static DealerAccountCreationService getInstance() Returns Object  singleton Author Digital Align Team | 07-12-2021 updateDealerAccount(leadObj, businessAccountObj) update dealer Account detail which are not updated during lead conversion Signature global virtual Account updateDealerAccount(    Lead leadObj,    Account businessAccountObj  ) Parameters Lead leadObj Account businessAccountObj Returns Account Author Digital Align Team | 07-15-2021 updateDealerContact(leadObj, businessContactObj) update dealer contact detail which are not updated during lead conversion Signature global virtual Contact updateDealerContact(    Lead leadObj,    Contact businessContactObj  ) Parameters Lead leadObj Contact businessContactObj Returns Contact Author Digital Align Team | 07-15-2021 updateDealerEmployeeActiveStatus(params) Signature global virtual Object updateDealerEmployeeActiveStatus(    Map<String, Object> params  ) Parameters Map<String Object> params Returns virtual Author Digital Align | 08-24-2021"
    },
    {
        "title": "FinInstAccountService",
        "fileName": "FinInstAccountService.html",
        "text": "FinInstAccountService Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class FinInstAccountService extends AbstractService Digital Align Team @reference FinInstAccountService Constructors FinInstAccountService() FinInstAccountService() Signature public FinInstAccountService() FinInstAccountService Methods assignCommunityPermissionSet(userId) assign permission set for user assignCommunityPermissionSetAsync(userId) assign permission set for user in future context(to Avoid mixed dml exception) createFinancialInstituteAccount(params) create Financial Institute Account createFinInstEmployeeContact(employeeContactObj, businessAccountObj) create contact for FinInst employee createFinInstEmployeeUser(employeeContactObj, businessAccountObj) create employee user for an FinInst createFinInstEmployeeUserAccount(params) fetchFinancialInstituteAccount() fetch Financial Institute Account getInstance() Provides a singleton instance of FinInstAccountService from which all other class methods can be accessed. assignCommunityPermissionSet(userId) assign permission set for user Signature global virtual List<PermissionSetAssignment> assignCommunityPermissionSet(    Id userId  ) Parameters Id userObj Returns virtual Author Digital Align Team | 07-14-2021 assignCommunityPermissionSetAsync(userId) assign permission set for user in future context(to Avoid mixed dml exception) Signature @future global static void assignCommunityPermissionSetAsync(Id userId) Parameters Id userId Author Digital Align Team | 07-14-2021 createFinancialInstituteAccount(params) create Financial Institute Account Signature global virtual Account createFinancialInstituteAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns virtual Author Digital Align Team | 07-27-2021 createFinInstEmployeeContact(employeeContactObj, businessAccountObj) create contact for FinInst employee Signature global virtual Contact createFinInstEmployeeContact(    Contact employeeContactObj,    Account businessAccountObj  ) Parameters Contact employeeContactObj Returns Contact Author Digital Align Team | 07-15-2021 createFinInstEmployeeUser(employeeContactObj, businessAccountObj) create employee user for an FinInst Signature global virtual User createFinInstEmployeeUser(    Contact employeeContactObj,    Account businessAccountObj  ) Parameters Contact employeeContactObj Returns User Author Digital Align Team | 07-15-2021 createFinInstEmployeeUserAccount(params) Signature global virtual object createFinInstEmployeeUserAccount(    Map<String, Object> params  ) fetchFinancialInstituteAccount() fetch Financial Institute Account Signature global virtual Account fetchFinancialInstituteAccount() Returns Account Author Digital Align Team | 07-27-2021 getInstance() Provides a singleton instance of FinInstAccountService from which all other class methods can be accessed. Signature public static FinInstAccountService getInstance() Returns Object  singleton Author Digital Align Team | 07-27-2021"
    },
    {
        "title": "UserAccountManagementController",
        "fileName": "UserAccountManagementController.html",
        "text": "UserAccountManagementController Copyright(c) 2021 Digital Align User Controller Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class UserAccountManagementController Digital Align Team @reference UserAccountManagementController Methods createDealerBusinessAccount(params) Create Dealer Business Account createDealerEmployeeAccount(params) Create Dealer Employee Business Account createFinancialInstituteAccount(params) createFinInstEmployeeAccount(params) Create financial institue employee Account fetchDealerEmployeeActiveStatus(recordId) fetchFinancialInstituteAccount() fetch financial institute account record fetchLoggedinUserContactDetails() updateDealerEmployeeActiveStatus(params) Update Isactive flag of user object createDealerBusinessAccount(params) Create Dealer Business Account Signature global static ApexResponse createDealerBusinessAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-15-2021 createDealerEmployeeAccount(params) Create Dealer Employee Business Account Signature global static ApexResponse createDealerEmployeeAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-15-2021 createFinancialInstituteAccount(params) Signature global static ApexResponse createFinancialInstituteAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-27-2021 createFinInstEmployeeAccount(params) Create financial institue employee Account Signature global static ApexResponse createFinInstEmployeeAccount(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align Team | 07-27-2021 fetchDealerEmployeeActiveStatus(recordId) Signature @AuraEnabled global static ApexResponse fetchDealerEmployeeActiveStatus(string recordId) Parameters string recordId Returns ApexResponse Author Digital Align | 08-24-2021 fetchFinancialInstituteAccount() fetch financial institute account record Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchFinancialInstituteAccount() Returns ApexResponse Author Digital Align | 07-23-2021 fetchLoggedinUserContactDetails() Signature @AuraEnabled(cacheable=true) global static ApexResponse fetchLoggedinUserContactDetails() Returns ApexResponse Author Digital Align | 09-01-2021 updateDealerEmployeeActiveStatus(params) Update Isactive flag of user object Signature global static ApexResponse updateDealerEmployeeActiveStatus(    Map<String, Object> params  ) Parameters Map<String Object> params Returns ApexResponse Author Digital Align | 08-24-2021"
    },
    {
        "title": "UserAccountManagementRepository",
        "fileName": "UserAccountManagementRepository.html",
        "text": "UserAccountManagementRepository Copyright(c) 2021 Digital Align Repository to fetch account related data Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class UserAccountManagementRepository extends DatabaseUtils Digital Align Team @reference UserAccountManagementRepository Methods fetchContactAccountById(contactId) fetch contact and account by contact id fetchContactById(contactId) fetchLeadById(leadId) fetchLeadStatus() getUserByContactId(contactId) fetch user data by linked contact id readPermissionSetByNames(permissionSetNames) readProfileByName(profileName) fetchContactAccountById(contactId) fetch contact and account by contact id Signature global static Contact fetchContactAccountById(Id contactId) Parameters Id contactId Returns Contact Author Digital Align Team | 07-15-2021 fetchContactById(contactId) Signature public static Contact fetchContactById(string contactId) Parameters string contactId Returns Contact Author Digital Align | 09-01-2021 fetchLeadById(leadId) Signature global static Lead fetchLeadById(Id leadId) Parameters Id leadId Returns Lead Author Digital Align Team | 07-14-2021 fetchLeadStatus() Signature global static LeadStatus fetchLeadStatus() Returns LeadStatus Author Digital Align Team | 07-15-2021 getUserByContactId(contactId) fetch user data by linked contact id Signature global static User getUserByContactId(Id contactId) Parameters Id contactId Returns User Author Digital Align | 08-24-2021 readPermissionSetByNames(permissionSetNames) Signature global static List<PermissionSet> readPermissionSetByNames(    List<String> permissionSetNames  ) Parameters List<String> permissionSetNames Returns List<PermissionSet> Author Digital Align Team | 07-14-2021 readProfileByName(profileName) Signature global static Profile readProfileByName(String profileName) Parameters String profileName Returns Profile Author Digital Align Team | 07-14-2021"
    },
    {
        "title": "ApexResponse",
        "fileName": "ApexResponse.html",
        "text": "ApexResponse Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class ApexResponse Digital Align Team @reference ApexResponse Properties Name Signature Annotations data global object data @AuraEnabled entity global object entity @AuraEnabled status global object status @AuraEnabled ApexResponse Methods exception(error) return status with 500 with error fail(data) return status with 400 and data fail() return status with 400 ok(data) return status with 200 and data ok() return status with 200 setData(data) setEntity(entity) setStatus(status) unauthorized(data) exception(error) return status with 500 with error Signature global static ApexResponse exception(object error) Parameters object error Returns ApexResponse Author Digital Align Team | 07-15-2021 fail(data) return status with 400 and data Signature global static ApexResponse fail(object data) Parameters object data Returns ApexResponse Author Digital Align Team | 07-15-2021 fail() return status with 400 Signature global static ApexResponse fail() Returns ApexResponse Author Digital Align Team | 09-02-2021 ok(data) return status with 200 and data Signature global static ApexResponse ok(object data) Parameters object data Returns ApexResponse Author Digital Align Team | 07-15-2021 ok() return status with 200 Signature global static ApexResponse ok() Returns ApexResponse Author Digital Align Team | 09-02-2021 setData(data) Signature public ApexResponse setData(Object data) Parameters Object data Returns ApexResponse Author Digital Align Team | 07-15-2021 setEntity(entity) Signature public ApexResponse setEntity(Object entity) Parameters Object entity Returns ApexResponse Author Digital Align Team | 07-15-2021 setStatus(status) Signature global static ApexResponse setStatus(object status) Parameters object status Returns ApexResponse Author Digital Align Team | 07-15-2021 unauthorized(data) Signature global static ApexResponse unauthorized(object data) Parameters object data Returns ApexResponse Author Digital Align Team | 07-15-2021"
    },
    {
        "title": "CustomException",
        "fileName": "CustomException.html",
        "text": "CustomException Copyright(c) 2021 Digital Align Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global with sharing class CustomException extends Exception Digital Align Team @reference CustomException Constructors CustomException(ex, message) CustomException() CustomException(ex, message) Signature public CustomException(Exception ex, String message) CustomException() Signature throw new CustomException(ex.getMessage())"
    },
    {
        "title": "SystemSettingRepository",
        "fileName": "SystemSettingRepository.html",
        "text": "SystemSettingRepository Copyright(c) 2021 Digital Align Repository to fetch system related setting Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual inherited sharing class SystemSettingRepository extends DatabaseUtils Digital Align Team @reference SystemSettingRepository Methods fetchSystemClassSetting(developerName) fetchSystemClassSetting fetchSystemClassSetting(developerName) fetchSystemClassSetting Signature global static ServiceClassSetting__mdt fetchSystemClassSetting(    String developerName  ) Parameters String developerName Returns ServiceClassSetting__mdt Author Digital Align Team | 07-13-2021"
    },
    {
        "title": "DynamicLWCDataTableController",
        "fileName": "DynamicLWCDataTableController.html",
        "text": "DynamicLWCDataTableController Signature global with sharing class DynamicLWCDataTableController DynamicLWCDataTableController Methods getTableDetails(metaDataName, filterString, sortString, offset, limitSize) getTableDetails(metaDataName, filterString, sortString, offset, limitSize) Signature global static ApexResponse getTableDetails(    String metaDataName,    String filterString,    String sortString,    Integer offset,    Integer limitSize  )"
    },
    {
        "title": "DynamicLWCDataTableRepository",
        "fileName": "DynamicLWCDataTableRepository.html",
        "text": "DynamicLWCDataTableRepository Signature public with sharing class DynamicLWCDataTableRepository DynamicLWCDataTableRepository Methods getTableDetails(metaDataName, FilterString, SortString) getTableDetails(metaDataName, FilterString, SortString) Signature public static List<DynamicDataTable__mdt> getTableDetails(    String metaDataName,    String FilterString,    String SortString  )"
    },
    {
        "title": "DynamicLWCDataTableResponse",
        "fileName": "DynamicLWCDataTableResponse.html",
        "text": "DynamicLWCDataTableResponse Signature public with sharing class DynamicLWCDataTableResponse DynamicLWCDataTableResponse Properties Name Signature Annotations tableColumns public String tableColumns @AuraEnabled tableData public String tableData @AuraEnabled"
    },
    {
        "title": "DynamicLWCDataTableService",
        "fileName": "DynamicLWCDataTableService.html",
        "text": "DynamicLWCDataTableService Copyright(c) 2021 Digital Align Dynamic Data Table Service Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global virtual with sharing class DynamicLWCDataTableService extends AbstractService Digital Align Team @reference DynamicLWCDataTableService Properties Name Signature dynamicDataObj public static DynamicDataTable__mdt dynamicDataObj profileName public static final string profileName QueryFilterString public static String QueryFilterString QuerySortString public static String QuerySortString DynamicLWCDataTableService Constructors DynamicLWCDataTableService() DynamicLWCDataTableService() Signature public DynamicLWCDataTableService() DynamicLWCDataTableService Methods check(value) method to repl;ace the accountId from the query generateQuery(offset, Limitset) Method to generate dynamic query based on column getInstance() Provides a singleton instance of DynamicLWCDataTableService from which all other class methods can be accessed. getTableColumns() Gets the values of table columns for displaying dynamic data getTableData(offset, limitSize) Gets the values of table data based on dynamic generated query getTableDetails(MetaDataName, FilterString, SortString, offset, limitSize) Gets the values of table data and columns for metadata check(value) method to repl;ace the accountId from the query Signature public static String check(String value) Returns Object  DynamicLWCDataTableResponse Author Digital Align Team | 07-22-2021 generateQuery(offset, Limitset) Method to generate dynamic query based on column Signature global virtual String generateQuery(Integer offset, Integer Limitset) Returns Object  DynamicLWCDataTableResponse Author Digital Align Team | 07-22-2021 getInstance() Provides a singleton instance of DynamicLWCDataTableService from which all other class methods can be accessed. Signature public static DynamicLWCDataTableService getInstance() Returns Object  singleton Author Digital Align Team | 07-27-2021 getTableColumns() Gets the values of table columns for displaying dynamic data Signature global virtual String getTableColumns() Returns Object  DynamicLWCDataTableResponse Author Digital Align Team | 07-22-2021 getTableData(offset, limitSize) Gets the values of table data based on dynamic generated query Signature global virtual string getTableData(Integer offset, Integer limitSize) Returns Object  DynamicLWCDataTableResponse Author Digital Align Team | 07-22-2021 getTableDetails(MetaDataName, FilterString, SortString, offset, limitSize) Gets the values of table data and columns for metadata Signature public virtual DynamicLWCDataTableResponse getTableDetails(    String MetaDataName,    String FilterString,    String SortString,    Integer offset,    Integer limitSize  ) Returns Object  DynamicLWCDataTableResponse Author Digital Align Team | 07-22-2021"
    }
];
